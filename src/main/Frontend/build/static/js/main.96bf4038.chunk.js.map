{"version":3,"sources":["sampleIcons/watermark4.svg","components/HambergerMenu.js","components/TopperSignIn.js","components/TopperDefault.js","components/MainTop.js","contentsSample/LogoTshirts-1.jpeg","contentsSample/LogoTshirts-2.jpeg","contentsSample/LogoTshirts-3.jpeg","contentsSample/LogoTshirts-14.jpeg","components/Contents.js","sampleIcons/mainLogo2.jpeg","components/Main.js","components/PopupDom.js","components/PopupPostCode.js","components/SignUpPage.js","components/SignInPage.js","components/TOS.js","components/MyCart.js","components/Profile.js","Selector/SizeSelector.js","Selector/ColorSelector.js","Selector/Counter.js","sampleIcons/cart2.svg","sampleIcons/heart.svg","components/Selector.js","contentsSample/LogoTshirts-4.jpeg","contentsSample/LogoTshirts-5.jpeg","contentsSample/LogoTshirts-6.jpeg","contentsSample/LogoTshirts-7.jpeg","contentsSample/LogoTshirts-8.jpeg","contentsSample/LogoTshirts-9.jpeg","contentsSample/LogoTshirts-10.jpeg","contentsSample/LogoTshirts-11.jpeg","contentsSample/LogoTshirts-12.jpeg","contentsSample/LogoTshirts-13.jpeg","components/DetailContents.js","HamburgerMenu/Notice.js","HamburgerMenu/About.js","HamburgerMenu/useInput.js","HamburgerMenu/Contact.js","components/BuyNow.js","Icons/kakaotalk.svg","Icons/instagram.svg","components/Footer.js","managers/MembersManage.js","managers/NoticeManage.js","HamburgerMenu/QnA.js","HamburgerMenu/AddQuestion.js","email/ContactEmail.js","Routes.js","sampleIcons/watermark.svg","components/Watermark.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","history","role","id","style","marginTop","type","border","href","TopperSignIn","marginRight","onClick","axios","post","then","sessionStorage","removeItem","document","location","push","class","TopperDefault","sessionCheck","getItem","Topper","pathname","Contents","window","scrollTo","useState","modelName","modelNo","modelColor","modelSize","modelPrice","modelSizeSummary","model","setModel","useEffect","response","data","cursor","src","sample_1","state","toString","replace","sample_3","sample_4","sample_5","Main","console","log","MainLogo","PopupDom","children","el","getElementById","ReactDom","createPortal","PopupPostCode","props","onComplete","address","extraAddress","addressType","bname","buildingName","addrFn","zonecode","onClose","className","SignUpPage","emailInput","useRef","name","pw","pwcheck","inputAddr","postCode","phoneNumber","email","emailSelector","emailAddress","fullEmail","inputValue","setValue","overlap","setOverlap","onChange","e","target","value","current","readOnly","focus","setAddress","setPostCode","isPopupOpen","setIsPopupOpen","SubmitClick","params","alert","length","onKeyPress","regexName","RegexName","maxLength","for","onKeyUp","regexId","$","css","RegexId","ID","regexPassword","RegexPassword","regexPasswordCheck","RegexPasswordCheck","fontSize","marginLeft","placeholder","regexPhoneNumber","RegexPhoneNumber","regexEmail","match","RegexEmail","regexEmailInput","RegexEmailInput","ref","SignInPage","inputInfo","setInputInfo","sessionInfo","setItem","SignedUserSeq","SignedUserName","SignedUserId","SignedUserPassword","SignedUserAddress","SignedUserPostCode","SignedUserPhoneNumber","SignedUserEmail","SignedUserAuth","TOS","width","MyCart","seq","modelSeq","orderColor","orderPsc","orderSize","orderModelNo","orderPrice","orderModelName","orderModelPrice","orderCart","setOrderCart","trigger","setTrigger","totalPrice","setTotalPrice","a","_orderCart","map","orderData","checkedBox","temp","i","getElementsByClassName","checked","thumnailShot","index","thumnailBlack","thumnailWhite","textAlign","deliOrder","selected","confirm","paramsSerializer","qs","stringify","Profile","prevAccountInfo","signedAccountInfo","setSignedAccountInfo","manageMenuMembers","manageMenuNotice","manageMenuContact","ManagerContents","updateResult","SizeSelector","dressSize","size","sizeSummary","React","memo","ColorSelector","dressColor","color","Counter","minus","plus","psc","Selector","dressThumbnail","setPsc","price","setPrice","modelFullNo","setModelFullNo","inputs","setInputs","fullModelName","onIncrease","useCallback","onDecrease","scroll","rollIt","this","scrollTop","windowSize","orders","orderInfo","sendOrder","heart","cart","DetailContents","useLocation","colorKind","split","sizeKind","sizeSummKind","sample_2","sample_6","sample_7","sample_8","sample_9","sample_10","sample_11","sample_12","sample_13","sample_14","useStyles","makeStyles","theme","root","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","Notice","title","contents","registerDate","notice","setNotice","_notice","classes","expanded","setExpanded","panel","text","Accordion","event","isExpanded","AccordionSummary","expandIcon","Typography","AccordionDetails","backgroundColor","height","About","fontFamily","fontWeight","initialValue","handler","Contact","useInput","onChangeTitle","onChangeText","phone","onChangePhone","onSubmit","preventDefault","inputNum","childElementCount","entries","FormData","failNum","next","emailjs","sendForm","result","error","Form","BuyNow","delivery","Footer","Icon_kakao","Icon_insta","MembersManage","membersAccount","setMembersAccount","_memberAccount","account","NoticeManage","noticeInfo","setNoticeInfo","writer","float","cols","wrap","QnA","answer","pass","qnaList","setQnaList","_qna","qna","handleChange","signedId","auth","questionsSeq","questioner","modifySeq","questionerHasAnswer","addAnswer","answerTrigger","qSeq","answerInput","modifyAnswer","modifySelect","modifyInput","ForManagers","askSeq","askId","ForManagersHasAnswer","ask","borderBottom","borderLeft","AddQuestion","questionTitle","questionContent","question","setQuestion","sendTitle","sendContent","ContactEmail","Router","path","exact","component","Watermark","addEventListener","querySelector","display","top","left","behavior","watermark1","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.96bf4038.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/watermark4.1e9b5df3.svg\";","import React from 'react';\nimport { BrowserRouter as Router, Route, Swtich, Link, withRouter} from 'react-router-dom';\n\nimport '../styles/HambergerStyle.css';\nimport '../styles/IconStyle.css';\n\nimport watermark4 from '../sampleIcons/watermark4.svg';\n\nexport const HambergerMenu = ({ history }) => {\n\n    return (\n        <div>\n            <nav role='navigation'>\n                <div id=\"menuToggle\" style = {{ marginTop : '-20px'}}>\n                    <input type=\"checkbox\"/>\n                                        \n                    <span></span>\n                    <span></span>\n                    <span></span>                      \n                \n                    <ul id=\"menu\" style = {{ border : '1px solid black'}}>\n\n                        <a href = '/'> <li>Home</li> </a>\n                        <a href = '/notice' > <li>Notice</li> </a>\n                        <a href=\"#\"><li>Goods</li></a>\n                        <a href=\"/qna\" history = {history}><li>QnA</li></a>\n                        <a href=\"/about\"><li>About</li></a>\n                        <a href=\"/contact\"><li>Contact</li></a>\n                        \n                        {/* <div style = {{ marginTop : '410px', marginLeft : '120px'}}>\n                            <img id = 'Icon-watermark' src = {watermark4} />\n                        </div> */}\n                    </ul>\n\n                </div>\n            </nav>\n            \n            \n        </div>\n    );\n}\n\nexport default withRouter(HambergerMenu);\n","import React from 'react';\nimport axios from 'axios';\n\nconst TopperSignIn = ({ history }) => {\n\n    const SignOut = () => {\n\n        axios.post('/api/Sign/SignOut').then(() => {\n\n            sessionStorage.removeItem(\"sessionInfo\");\n            document.location.href = \"/\";\n          \n        });\n    }\n\n    const profile = () => {\n        history.push('/profile');\n    }\n\n    return (\n\n        <div>\n            <h4 style = {{ marginRight : '15%'}} id = 'topper-text' onClick = {SignOut} > &nbsp;&nbsp; sign out </h4>\n            <h4 id = 'topper-text' onClick = {profile} > profile &nbsp; | </h4>\n            <h4 class = 'slogan'> GO TELL IT WE MADE IT </h4>\n        </div>\n    );\n}\n\nexport default TopperSignIn;","import React from 'react';\n\nconst TopperDefault = ({history}) => {\n\n    const signIn = () => {\n        history.push('/signInPage')\n    }\n    \n    const signUp = () => {\n        history.push('/signUpPage')\n    }\n\n    return (\n        <div>\n\n            <h4 style = {{ marginRight : '15%'}} id = 'topper-text' onClick = {signIn}> &nbsp;&nbsp; sign in </h4>\n            <h4 id = 'topper-text' onClick = {signUp}> sign up &nbsp; | </h4>\n            <h4 class = 'slogan'> GO TELL IT WE MADE IT </h4>\n        </div>\n    );\n}\n\nexport default TopperDefault;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../styles/MainTopStyle.css';\nimport HambergerMenu from './HambergerMenu';\nimport TopperSignIn from './TopperSignIn';\nimport TopperDefault from './TopperDefault';\n\nexport const MainTop = ({ history }) => {\n\n    const home = () => {\n        history.push('/')\n    }\n    \n    var sessionCheck = sessionStorage.getItem(\"sessionInfo\");\n\n    const Topper = () => {\n\n        if(sessionCheck != null) {\n            return <TopperSignIn history = {history}/>\n        } else {\n            return <TopperDefault  history = {history}/>\n        }\n    }\n\n    return (\n        <div>\n            <div class = 'topper' >\n                {/* <h4 style = {{ marginRight : '15%'}} id = 'topper-text' onClick = {signIn}> &nbsp;&nbsp; sign in </h4>\n                <h4 id = 'topper-text' onClick = {signUp}> sign up &nbsp; | </h4>\n                <h4 class = 'slogan'> GO TELL IT WE MADE IT </h4> */}\n                <Topper />\n            </div>\n\n            <div class = 'MainContainer'>\n                <div class = 'container'>  \n                    <div class = 'container-left'>\n                        <div class = 'logo' onClick = { home } >\n                            ROMAN88\n                        </div>\n\n                        <div class = 'menu' >\n                            <h4 id = 'menu-text'  onClick = { () => {history.push({ pathname : '/contents'})}}> T SHIRTS</h4>\n                        </div>\n                    </div>\n\n                    <div class = 'container-right'>\n                        <HambergerMenu history = {history}/>\n                    </div>\n\n                </div>\n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default withRouter(MainTop);","export default __webpack_public_path__ + \"static/media/LogoTshirts-1.5a51f91f.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-2.e174963a.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-3.29e901c1.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-14.56602920.jpeg\";","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport '../styles/MainContentsStyle.css';\nimport sample_1 from '../contentsSample/LogoTshirts-1.jpeg';\nimport sample_3 from '../contentsSample/LogoTshirts-2.jpeg';\nimport sample_4 from '../contentsSample/LogoTshirts-3.jpeg';\nimport sample_5 from '../contentsSample/LogoTshirts-14.jpeg';\n\nconst Contents = ({ history }) => {    \n\n    window.scrollTo(0,0);\n\n    const [model, setModel] = useState({\n        modelName : \"\",\n        modelNo : \"\",\n        modelColor : \"\",\n        modelSize : \"\",\n        modelPrice : 0,\n        modelSizeSummary : \"\"\n    });\n\n    useEffect(() => {\n        axios.post('api/modelInfo').then((response) => {\n            setModel(response.data);\n        });\n    },[]);\n\n    return (\n        <div class = 'MainContentsContainer'>\n            \n            <div class = 'Contents'>\n                <img id = 'Contents-size' style = {{cursor : 'pointer'}} src = {sample_1} onClick = { \n                    () => {history.push({ \n                            pathname : '/detail/', \n                            state : { model : {model}}\n                           })\n                          }   \n                    } \n                />\n                <h4> {model.modelName} </h4>\n                <h5> KRW {model.modelPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} </h5>\n            </div>\n\n            <div class = 'Contents-right'>\n                <img id = 'Contents-size' src = {sample_3} />\n                <h4  > SAMPLE-A </h4>\n                <h5 > KRW 32,000 </h5>\n            </div>\n\n            <div class = 'Contents'>\n                <img id = 'Contents-size' src = {sample_4} />\n                <h4> SAMPLE-B </h4>\n                <h5> KRW 32,000 </h5>\n            </div>\n\n            <div class = 'Contents-right'>\n                <img id = 'Contents-size' src = {sample_5}/>\n                <h4  > 길거리 헌팅 100% </h4>\n                <h5  > KRW 32,000 </h5>\n            </div>\n           \n        </div>\n    );\n}\n\n\nexport default Contents;\n","export default __webpack_public_path__ + \"static/media/mainLogo2.c1f7a75c.jpeg\";","import React from 'react';\nimport MainLogo from '../sampleIcons/mainLogo2.jpeg';\n\nimport '../styles/MainStyle.css';\n\nconst Main = () => {   \n\n    window.scrollTo(0,0);\n\n    console.log(sessionStorage.getItem('id'))\n    console.log(sessionStorage.getItem('auth'))\n\n    return (\n        <div>\n            <img src = {MainLogo} id = 'mainImg' />\n        </div>\n    );\n}\n\n\nexport default Main;\n","import ReactDom from 'react-dom';\n \nconst PopupDom = ({ children }) => {\n    const el = document.getElementById('popupDom');\n    return ReactDom.createPortal(children, el);\n};\n \nexport default PopupDom;","import React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nimport '../styles/PostCodeStyle.css';\n \nconst PopupPostCode = (props) => {\n\t// 우편번호 검색 후 주소 클릭 시 실행될 함수, data callback 용\n    const handlePostCode = (data) => {\n        let address = data.address;\n        let extraAddress = ''; \n        \n        if (data.addressType === 'R') {\n          if (data.bname !== '') {\n            extraAddress += data.bname;\n          }\n          if (data.buildingName !== '') {\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n          }\n          address += (extraAddress !== '' ? ` (${extraAddress})` : '');\n        }\n\n        props.addrFn(address, data.zonecode);\n        console.log(address)\n        console.log(data.zonecode)\n        props.onClose()\n    }\n \n    return(\n        <div>\n            <DaumPostcode class = \"postCodeStyle\" onComplete={handlePostCode} />\n            <button type='button' onClick={() => {props.onClose()}} className='postCode_btn'>X</button>\n        </div>\n    )\n}\n \nexport default PopupPostCode;","import React, {useState, useRef, useEffect} from 'react';\nimport axios from 'axios';\nimport PopupDom from './PopupDom';\nimport PopupPostCode from './PopupPostCode';\nimport $ from 'jquery';\n\nimport '../styles/SignUpStyle.css';\nimport { typeOf } from 'react-is';\n\nconst SignUpPage = ({history}) => {\n\n    window.scrollTo(0,0);\n\n    // Email 직접입력시 input 접근용 ref\n    const emailInput = useRef();\n\n    const [inputValue, setValue] = useState({\n        name : '',\n        id : '',\n        pw : '',\n        pwcheck : '',\n        inputAddr : '',\n        address : '',\n        postCode : '',\n        phoneNumber : '',\n        email : '',\n        emailSelector : '',\n        emailAddress : '',\n        fullEmail : ''\n    });\n\n    const [overlap, setOverlap] = useState('overlap');\n\n    // 각 input의 onChange\n    const onChange = (e) => {\n        \n        const { value, name } = e.target;\n        if(value == 'self') {\n            emailInput.current.value = '';\n            emailInput.current.readOnly = false;\n            emailInput.current.focus();\n        } else if(value == 'gmail.com' || value == 'naver.com' || value == 'daum.com' || value == 'outlook.com' || value == 'nate.com') {\n            emailInput.current.readOnly = true;\n            setValue({\n                ...inputValue,\n                [name]:value\n            });\n        } else {\n            setValue({\n                ...inputValue,\n                [name]:value\n            });\n        }\n        \n    }\n\n    // daum-kakao post api에서 우편번호랑 주소 받아올 state\n    const [address, setAddress] = useState('');\n    const [postCode, setPostCode] = useState('');\n\n    const addressAdd = (address, zonecode) => {\n        setAddress(address);\n        setPostCode(zonecode);\n    }\n\n    // api popup\n    const [isPopupOpen, setIsPopupOpen] = useState(false)\n \n    const openPostCode = () => {\n        setIsPopupOpen(true)\n    }\n \n    const closePostCode = () => {\n        setIsPopupOpen(false)\n    }\n\n\n    // Regular Expression \n    const RegexName = () => {\n        var regexName = inputValue.name.replace(/[^ㄱ-ㅎ가-힣a-z]/g, \"\");\n        inputValue.name = regexName;\n    }\n\n    const RegexId = () => {\n        var regexId = inputValue.id.replace(/[^a-z0-9]/g,\"\");\n\n        if(regexId.length <  6) {\n            $(\".id__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n\n            // 아래는 overlap check에 관하여\n        } else if(overlap == \"overlap\") {\n            $(\".id__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n        } else {\n            $(\".id__input-active\").css({\"borderBottom\":\"1px solid black\"}); \n        }\n        inputValue.id = regexId;\n    }\n\n    const RegexPassword = () => {\n        var regexPassword = inputValue.pw.replace(/[^a-z0-9]/g,\"\");\n\n        if(regexPassword.length <  6) {\n            $(\".pw__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n        } else {\n            $(\".pw__input-active\").css({\"borderBottom\":\"1px solid black\"}); \n        }\n        inputValue.pw = regexPassword;\n    }\n\n    const RegexPasswordCheck = () => {\n        var regexPasswordCheck = inputValue.pwcheck.replace(/[^a-z0-9]/g,\"\");\n\n        if(regexPasswordCheck.length <  6 || inputValue.pw != regexPasswordCheck) {\n            $(\".pw__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n        } else {\n            $(\".pw__input-active\").css({\"borderBottom\":\"1px solid black\"}); \n        }\n        inputValue.pwcheck = regexPasswordCheck;\n    }\n\n\n    const RegexPhoneNumber = () => {\n        var regexPhoneNumber = inputValue.phoneNumber.replace(/[^0-9]/g, \"\");\n        inputValue.phoneNumber = regexPhoneNumber;\n    }\n\n    const RegexEmail = () => {\n        var regexEmail = inputValue.email.replace(/[^a-z0-9-_]/g,\"\");\n\n        if(inputValue.email.match(regexEmail) != null) {\n            $(\".email__input-active\").css({\"borderBottom\":\"1px solid black\"}); \n        } else {\n            $(\".email__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n        }\n        inputValue.email = regexEmail;\n    }\n\n    const RegexEmailInput = () => {\n        var regexEmailInput = inputValue.emailSelector.replace(/((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i,\"\");\n        if(inputValue.emailSelector.match(regexEmailInput) != null ) {\n            var emailAddress = inputValue.email + '@' + inputValue.emailSelector;\n            var emailPattern  = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n  \n            if(emailAddress.match(emailPattern) != null) {\n                $(\".emailInput\").css({\"borderBottom\":\"1px solid black\"});\n                $(\".email__input-active\").css({\"borderBottom\":\"1px solid black\"}); \n            } else { \n                $(\".emailInput\").css({\"borderBottom\":\"1px solid red\"}); \n                $(\".email__input-active\").css({\"borderBottom\":\"1px solid red\"}); \n            }\n        \n        }\n    }\n\n    const createUser = () => {\n        if(inputValue.name == '') {\n            alert('이름을 입력해주세요.');\n            return false;\n        } else if(inputValue.id.length < 6) {\n            alert('ID를 입력하지 않았거나 유효하지 않은 ID입니다.');\n            return false;\n        } else if(overlap == 'overlap') { \n            alert('ID중복검사를 완료해주세요.');\n        } else if(inputValue.pw.length < 6) {\n            alert('PASSWORD를 입력하지 않았거나 유효하지 않은 PASSWORD입니다.');\n            return false;\n        } else if(inputValue.pw != inputValue.pwcheck) {\n            alert('PASSWORD가 일치하지 않습니다.')\n            return false;\n        } else if(address == '' || postCode == '') {\n            alert('주소를 입력해주세요.');\n            return false;\n        } else if(inputValue.inputAddr == '') {\n            alert('상세주소를 입력해주세요.');\n            return false;\n        } else if(inputValue.phoneNumber == '') {\n            alert('전화번호를 입력해주세요');\n            return false;\n        } else if(inputValue.email == '') {\n            alert('이메일 입력좀');\n            return false;\n        } else {\n            var email = inputValue.email + '@' + inputValue.emailSelector\n            inputValue.fullEmail = email;\n            inputValue.address = address + \" \" +  inputValue.inputAddr;\n            inputValue.postCode = postCode;\n            SubmitClick();\n        }\n    }\n\n    const OverLapCheck = () => {\n\n        const ID = inputValue.id;\n\n        axios.post('/api/Sign/OverlapCheck', null, { params : { \n            ID\n        }}).then((response) => {\n            if(response.data == true) {\n                alert(\"사용 가능한 ID\");\n                setOverlap('Notoverlap');\n            } else {\n                alert(\"ㄴㄴ불가능\");\n                setOverlap('overlap');\n            }\n        });\n\n    }\n\n    const SubmitClick = () => {\n\n        const {name, id, pw, fullEmail, address, postCode, phoneNumber} = inputValue;\n\n        axios.post('/api/Sign/CreateAccount', null, { params : {\n            name,\n            id,\n            pw,\n            fullEmail,\n            address,\n            postCode,\n            phoneNumber\n        }}).then((response) => {\n            if(response.data == 1) {\n                alert(\"로망단이 되신걸 환영합니다\");\n                history.push({ pathname : '/'})\n            } else {\n                alert(\"되겠냐 씹년아\");\n            }\n        });\n\n    }\n    \n\n    return (\n        \n        <div class = \"group\">\n            <script src=\"https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js\"></script>\n            <h4> Create Account </h4>\n            \n                <hr style = {{ border : '0.5px solid black', marginTop : '-15px' }}/>\n                <div className=\"nameField\" >\n                    <input name=\"name\" className={\n                        inputValue.name.length < 1\n                        ? `name__input`\n                        : `name__input name__input-active`\n                    }\n                    onKeyPress = {RegexName(this)}\n                    onChange={ onChange }\n                    type=\"text\"\n                    value={inputValue.name}\n                    maxLength = '10'\n                    />\n                    <label for=\"name\" className=\"target__label\"> NAME </label>         \n                </div> \n\n                <div className=\"idField\">\n                    <input name=\"id\" className={\n                        inputValue.id.length < 1\n                        ? `id__input`\n                        : `id__input id__input-active`\n                    }\n                    onChange={ onChange }\n                    onKeyUp = {RegexId(this)}\n                    type=\"text\"\n                    value={inputValue.id}\n                    maxLength = '15'\n                    />\n                    <label for=\"name\" className=\"target__label\" >ID (6-15자, 영문 / 영문+숫자)</label> \n                </div>   \n\n                <div className = \"overlapCheckField\">\n                    <button class = \"overlapCheckBtn\" onClick = {OverLapCheck} > ID중복체크 </button>\n                </div>\n\n                <div className=\"pwField\" >\n                    <input name=\"pw\" className={\n                        inputValue.pw.length < 1\n                        ? `pw__input`\n                        : `pw__input pw__input-active`\n                    }\n                    onKeyUp = {RegexPassword(this)}\n                    onChange={ onChange }\n                    type=\"password\"\n                    maxLength = '15'\n                    value={inputValue.pw}\n                    />\n                    <label for=\"name\" className=\"target__label\">PASSWORD (6-15자, 영문 / 영문+숫자)</label> \n                </div>   \n\n                <div className=\"pwCheckField\">\n                    <input name=\"pwcheck\" className={\n                        inputValue.pwcheck.length < 1\n                        ? `pw__input`\n                        : `pw__input pw__input-active`\n                    }\n                    onKeyUp = {RegexPasswordCheck(this)}\n                    onChange={ onChange }\n                    type=\"password\"\n                    value={inputValue.pwcheck}\n                    />\n                    <label for=\"name\" className=\"target__label\">PASSWORD CHECK</label>\n                </div>  \n\n                <div className = \"addressField\">\n                    <p style = {{ fontSize : '13px', marginLeft : '10px', }}> ADDRESS </p>\n                    <button type='button'  class = \"addressSearch\" onClick={openPostCode}>우편번호 검색</button>\n                    <input type = 'text' class = \"postCode\" value = {postCode} name = 'postCode' placeholder = '우편번호'/>\n                    <input type = 'text' class = \"addr\" value = {address} name = 'selectAddr' placeholder = '주소'/>\n                    <input type = 'text' class = \"addrInput\" name = 'inputAddr' placeholder = '상세주소 / 상세주소가 없는 경우 공백으로 입력'\n                        onChange={ onChange }\n                        value={inputValue.inputAddr}\n                    />\n                    \n                    <div class = \"popupContainer\">\n                        <div id='popupDom'>\n                            {isPopupOpen && (\n                                <PopupDom>\n                                    <PopupPostCode onClose={closePostCode} addrFn = {addressAdd} />\n                                </PopupDom>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"phoneNumberField\" >\n                    <input name=\"phoneNumber\" className={\n                        inputValue.phoneNumber.length < 1\n                        ? `target__input`\n                        : `target__input target__input-active`\n                    }\n                    onKeyUp = {RegexPhoneNumber(this)}\n                    maxLength = '11'\n                    onChange={ onChange }\n                    type=\"text\"\n                    value={inputValue.phoneNumber}\n                    />\n                    <label for=\"name\" className=\"target__label\">PHONE NUMBER</label>\n                </div>\n\n                <div className=\"emailField\" >\n                    <input name=\"email\" className={\n                        inputValue.email.length < 1\n                        ? `email__input`\n                        : `email__input email__input-active`\n                    }\n                    onKeyUp = {RegexEmail(this)}\n                    onChange={ onChange }\n                    type=\"text\"\n                    value={inputValue.email}\n                    />\n                    <label for=\"name\" className=\"target__label\" >EMAIL</label>\n                </div>  \n\n                <div class = \"emailInputField\">\n                    @ &nbsp;&nbsp;\n                    <input className = 'emailInput' \n                            onKeyUp = {RegexEmailInput(this)} \n                            name = \"emailSelector\"  \n                            onChange={ onChange } \n                            ref = {emailInput} \n                            value = {inputValue.emailSelector}\n                    />\n                </div>\n\n                <div class = 'selectField'>\n                    <form name = 'form' >\n                        <select name = 'emailSelector' class = \"emailSelector\" onChange = {onChange}>\n                            <option value = 'self'> 직접입력 </option>\n                            <option value = 'gmail.com'> gmail.com </option>\n                            <option value = 'naver.com'> naver.com </option>\n                            <option value = 'daum.com'> daum.com </option>\n                            <option value = 'nate.com'> nate.com </option>\n                            <option value = 'outlook.com'> outlook.com </option>\n                            \n                        </select>\n                    </form>\n                </div>\n\n                <div class = \"joinBtnContainer\">\n                    <button class = \"joinButton\" onClick = {createUser}> JOIN </button>\n                </div>\n\n        </div>\n\n        \n    );\n}\n\nexport default SignUpPage;","import React, {useState} from 'react';\n\nimport axios from 'axios';\nimport $ from 'jquery';\nimport MainTop from './MainTop';\nimport '../styles/SignInStyle.css';\n\nconst SignInPage = ({ history }) => {\n\n    const [inputInfo, setInputInfo] = useState({\n        id : '',\n        pw : ''\n    });\n\n    const onChange = (e) => {\n        \n        const { value, name } = e.target;\n        \n        setInputInfo({\n            ...inputInfo,\n            [name]:value\n        });\n    }\n\n    const SignInUser = () => {\n        \n        const {id, pw} = inputInfo;\n        axios.post('/api/Sign/SignAccount', null, { params : {\n            id,\n            pw\n        }}).then((response) => {\n\n            if(!response.data.sessionInfo) {\n                alert(\"등록되지 않은 계정이거나 아이디 혹은 비밀번호가 일치하지 않습니다.\");\n\n            } else {\n                sessionStorage.setItem(\"sessionInfo\", response.data.sessionInfo);\n                sessionStorage.setItem(\"seq\", response.data.SignedUserSeq);\n                sessionStorage.setItem(\"name\", response.data.SignedUserName);\n                sessionStorage.setItem(\"id\", response.data.SignedUserId);\n                sessionStorage.setItem(\"password\", response.data.SignedUserPassword);\n                sessionStorage.setItem(\"address\", response.data.SignedUserAddress);\n                sessionStorage.setItem(\"postCode\", response.data.SignedUserPostCode);\n                sessionStorage.setItem(\"phoneNumber\", response.data.SignedUserPhoneNumber);\n                sessionStorage.setItem(\"email\", response.data.SignedUserEmail);\n                sessionStorage.setItem(\"auth\", response.data.SignedUserAuth);\n\n                document.location.href = \"/\";\n                return <MainTop /> \n            }\n\n        });\n    \n\n    }\n\n    // window.onload=function(){\n    //     var inputPw = document.getElementById(\"pwForPressEnter\");\n\n    //     inputPw.addEventListener(\"keyup\", function(event) {\n    //         if (event.keyCode === 13) {\n    //             event.preventDefault();\n    //             SignInUser();\n    //         }\n    //     }); \n    // }\n\n    return(\n            <div class = 'SignInBox' >\n                <h4> Check Account</h4>\n                <hr style = {{ border : '0.5px solid black', marginTop : '-15px' }}/>\n\n                <div className=\"inputId\">\n                    <input name=\"id\" id = \"sign\" className={\n                        inputInfo.id.length < 1\n                        ? `id__input`\n                        : `id__input id__input-active`\n                    }\n                    onChange={ onChange }\n                    type=\"text\"\n                    value={inputInfo.id}\n                    maxLength = '15'\n                    />\n                    <label for=\"name\" className=\"target__label\" >ID</label> \n                </div>   \n\n                <div className=\"inputPw\" >\n                    <input name=\"pw\" className={\n                        inputInfo.pw.length < 1\n                        ? `pw__input`\n                        : `pw__input pw__input-active`\n                    }\n                    onChange={ onChange }\n                    type=\"password\"\n                    maxLength = '15'\n                    value={inputInfo.pw}\n                    id = \"pwForPressEnter\"\n                    />\n                    <label for=\"name\" className=\"target__label\">PASSWORD</label> \n                </div>\n\n                <div className = 'findContainer'>\n                    \n                </div>\n\n                <div className = 'userCheck' id = \"loginButtonEnter\">\n                    <button class = 'checkBtn' onClick = {SignInUser}> Login </button>\n                </div>\n\n                {/* <div className=\"container\">\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password}  onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div> */}\n\n\n            </div>\n    )\n}\nexport default SignInPage;","import React from 'react';\nimport '../styles/TOSStyle.css';\n\nfunction TOS() {\n    return (\n        <div class = 'tosContainer'>\n\n            <div>\n                <h3> 이용약관 </h3>\n                <hr style = {{ width : '100%'}} />\n            </div>\n\n            <div class = 'tosTitle'>\n                <h5> 스토어 이용약관 </h5>\n            </div>\n            <div class = 'tosContents'>\n                <div>\n                    <h4> 제1조 (목적) </h4>\n                    <h5 id = 'tosContentsColor' >\n                    이 약관은 roman88 회사(전자상거래 사업자)가 운영하는 roman88 사이버 몰(이하 “몰”이라 한다)에서\n                    제공하는 인터넷 관련 서비스(이하 “서비스”라 한다)를 이용함에 있어 사이버 몰과 이용자의\n                    권리․의무 및 책임사항을 규정함을 목적으로 합니다.\n                    ※ PC통신, 무선 등을 이용하는 전자상거래에 대해서도 그 성질에 반하지 않는 한 이 약관을 준용합니다.\n                    </h5 >\n                    <h4> 제2조 (정의) </h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”이란 roman88 회사가 재화 또는 용역(이하 “재화 등”이라 함)을 이용자에게 제공하기 위하여\n                    컴퓨터 등 정보통신설비를 이용하여 재화 등을 거래할 수 있도록 설정한 가상의 영업장을\n                    말하며, 아울러 사이버몰을 운영하는 사업자의 의미로도 사용합니다.\n                    ② “이용자”란 “몰”에 접속하여 이 약관에 따라 “몰”이 제공하는 서비스를 받는 회원 및 비회원\n                    을 말합니다.\n                    ③ “회원”이라 함은 “몰”에 회원등록을 한 자로서, 계속적으로 “몰”이 제공하는 서비스를 이용\n                    할 수 있는 자를 말합니다.\n                    ④ “비회원”이라 함은 회원에 가입하지 않고 “몰”이 제공하는 서비스를 이용하는 자를 말합니\n                    다.\n                    </h5 >\n                    <h4>제3조 (약관 등의 명시와 설명 및 개정)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이 약관의 내용과 상호 및 대표자 성명, 영업소 소재지 주소(소비자의 불만을 처리할\n                    수 있는 곳의 주소를 포함), 전화번호․모사전송번호․전자우편주소, 사업자등록번호, 통신판\n                    매업 신고번호, 개인정보관리책임자등을 이용자가 쉽게 알 수 있도록 roman88 사이버몰의 초기\n                    서비스화면(전면)에 게시합니다. 다만, 약관의 내용은 이용자가 연결화면을 통하여 볼 수 있\n                    도록 할 수 있습니다.\n                    ② “몰”은 이용자가 약관에 동의하기에 앞서 약관에 정하여져 있는 내용 중 청약철회․배송책\n                    임․환불조건 등과 같은 중요한 내용을 이용자가 이해할 수 있도록 별도의 연결화면 또는\n                    팝업화면 등을 제공하여 이용자의 확인을 구하여야 합니다.\n                    ③ “몰”은 「전자상거래 등에서의 소비자보호에 관한 법률」, 「약관의 규제에 관한 법률」,\n                    「전자문서 및 전자거래기본법」, 「전자금융거래법」, 「전자서명법」, 「정보통신망 이용\n                    촉진 및 정보보호 등에 관한 법률」, 「방문판매 등에 관한 법률」, 「소비자기본법」 등 관\n                    련 법을 위배하지 않는 범위에서 이 약관을 개정할 수 있습니다.\n                    ④ “몰”이 약관을 개정할 경우에는 적용일자 및 개정사유를 명시하여 현행약관과 함께 몰의 초\n                    기화면에 그 적용일자 7일 이전부터 적용일자 전일까지 공지합니다. 다만, 이용자에게 불리\n                    하게 약관내용을 변경하는 경우에는 최소한 30일 이상의 사전 유예기간을 두고 공지합니다.\n                    이 경우 “몰”은 개정 전 내용과 개정 후 내용을 명확하게 비교하여 이용자가 알기 쉽도록\n                    표시합니다.\n                    ⑤ “몰”이 약관을 개정할 경우에는 그 개정약관은 그 적용일자 이후에 체결되는 계약에만 적용\n                    되고 그 이전에 이미 체결된 계약에 대해서는 개정 전의 약관조항이 그대로 적용됩니다.\n                    다만 이미 계약을 체결한 이용자가 개정약관 조항의 적용을 받기를 원하는 뜻을 제3항에 의한\n                    개정약관의 공지기간 내에 “몰”에 송신하여 “몰”의 동의를 받은 경우에는 개정약관 조항이\n                    적용됩니다.\n                    ⑥ 이 약관에서 정하지 아니한 사항과 이 약관의 해석에 관하여는 「전자상거래 등에서의 소비\n                    자보호에 관한 법률」, 「약관의 규제에 관한 법률」, 공정거래위원회가 정하는 전자상거래\n                    등에서의 소비자 보호지침 및 관계법령 또는 상관례에 따릅니다.\n                    </h5 >\n                    <h4> 제4조 (서비스의 제공 및 변경) </h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 다음과 같은 업무를 수행합니다.\n                    1. 재화 또는 용역에 대한 정보 제공 및 구매계약의 체결\n                    2. 구매계약이 체결된 재화 또는 용역의 배송\n                    3. 기타 “몰”이 정하는 업무\n                    ② “몰”은 재화 또는 용역의 품절 또는 기술적 사양의 변경 등의 경우에는 장차 체결되는 계약\n                    에 의해 제공할 재화 또는 용역의 내용을 변경할 수 있습니다. 이 경우에는 변경된 재화 또\n                    는 용역의 내용 및 제공일자를 명시하여 현재의 재화 또는 용역의 내용을 게시한 곳에 즉시\n                    공지합니다.\n                    ③ “몰”이 제공하기로 이용자와 계약을 체결한 서비스의 내용을 재화등의 품절 또는 기술적 사\n                    양의 변경 등의 사유로 변경할 경우에는 그 사유를 이용자에게 통지 가능한 주소로 즉시 통\n                    지합니다.\n                    ④ 전항의 경우 “몰”은 이로 인하여 이용자가 입은 손해를 배상합니다. 다만, “몰”이 고의 또는\n                    과실이 없음을 입증하는 경우에는 그러하지 아니합니다.\n                    </h5 >\n                    <h4>제5조 (서비스의 중단)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 컴퓨터 등 정보통신설비의 보수점검․교체 및 고장, 통신의 두절 등의 사유가 발생한\n                    경우에는 서비스의 제공을 일시적으로 중단할 수 있습니다.\n                    ② “몰”은 제1항의 사유로 서비스의 제공이 일시적으로 중단됨으로 인하여 이용자 또는 제3자\n                    가 입은 손해에 대하여 배상합니다. 단, “몰”이 고의 또는 과실이 없음을 입증하는 경우에는\n                    그러하지 아니합니다.\n                    ③ 사업종목의 전환, 사업의 포기, 업체 간의 통합 등의 이유로 서비스를 제공할 수 없게 되는\n                    경우에는 “몰”은 제8조에 정한 방법으로 이용자에게 통지하고 당초 “몰”에서 제시한 조건에\n                    따라 소비자에게 보상합니다. 다만, “몰”이 보상기준 등을 고지하지 아니한 경우에는 이용자\n                    들의 마일리지 또는 적립금 등을 “몰”에서 통용되는 통화가치에 상응하는 현물 또는 현금으\n                    로 이용자에게 지급합니다.   \n                    </h5 >\n                    <h4>제6조 (회원가입)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① 이용자는 “몰”이 정한 가입 양식에 따라 회원정보를 기입한 후 이 약관에 동의한다는 의사\n                    표시를 함으로써 회원가입을 신청합니다.\n                    ② “몰”은 제1항과 같이 회원으로 가입할 것을 신청한 이용자 중 다음 각 호에 해당하지 않는\n                    한 회원으로 등록합니다.\n                    1. 가입신청자가 이 약관 제7조제3항에 의하여 이전에 회원자격을 상실한 적이 있는 경우, 다\n                    만 제7조제3항에 의한 회원자격 상실 후 3년이 경과한 자로서 “몰”의 회원재가입 승낙을\n                    얻은 경우에는 예외로 합니다.\n                    2. 등록 내용에 허위, 기재누락, 오기가 있는 경우\n                    - 3 -\n                    3. 기타 회원으로 등록하는 것이 “몰”의 기술상 현저히 지장이 있다고 판단되는 경우\n                    ③ 회원가입계약의 성립 시기는 “몰”의 승낙이 회원에게 도달한 시점으로 합니다.\n                    ④ 회원은 회원가입 시 등록한 사항에 변경이 있는 경우, 상당한 기간 이내에 “몰”에 대하여 회원정\n                    보 수정 등의 방법으로 그 변경사항을 알려야 합니다.\n                    </h5 >\n                    <h4>제7조 (회원 탈퇴 및 자격 상실 등)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① 회원은 “몰”에 언제든지 탈퇴를 요청할 수 있으며 “몰”은 즉시 회원탈퇴를 처리합니다.\n                    ② 회원이 다음 각 호의 사유에 해당하는 경우, “몰”은 회원자격을 제한 및 정지시킬 수 있습니다.\n                    1. 가입 신청 시에 허위 내용을 등록한 경우\n                    2. “몰”을 이용하여 구입한 재화 등의 대금, 기타 “몰”이용에 관련하여 회원이 부담하는 채무\n                    를 기일에 지급하지 않는 경우\n                    3. 다른 사람의 “몰” 이용을 방해하거나 그 정보를 도용하는 등 전자상거래 질서를 위협하는\n                    경우\n                    4. “몰”을 이용하여 법령 또는 이 약관이 금지하거나 공서양속에 반하는 행위를 하는 경우\n                    ③ “몰”이 회원 자격을 제한․정지 시킨 후, 동일한 행위가 2회 이상 반복되거나 30일 이내에\n                    그 사유가 시정되지 아니하는 경우 “몰”은 회원자격을 상실시킬 수 있습니다.\n                    ④ “몰”이 회원자격을 상실시키는 경우에는 회원등록을 말소합니다. 이 경우 회원에게 이를 통\n                    지하고, 회원등록 말소 전에 최소한 30일 이상의 기간을 정하여 소명할 기회를 부여합니다.    \n                    </h5 >\n                    <h4>제8조 (회원에 대한 통지)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”이 회원에 대한 통지를 하는 경우, 회원이 “몰”과 미리 약정하여 지정한 전자우편 주소\n                    로 할 수 있습니다.\n                    ② “몰”은 불특정다수 회원에 대한 통지의 경우 1주일이상 “몰” 게시판에 게시함으로서 개별 통\n                    지에 갈음할 수 있습니다. 다만, 회원 본인의 거래와 관련하여 중대한 영향을 미치는 사항에\n                    대하여는 개별통지를 합니다.\n                    </h5 >\n                    <h4>제9조 (구매신청 및 개인정보 제공 동의 등)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”이용자는 “몰”상에서 다음 또는 이와 유사한 방법에 의하여 구매를 신청하며, “몰”은 이\n                    용자가 구매신청을 함에 있어서 다음의 각 내용을 알기 쉽게 제공하여야 합니다.\n                    1. 재화 등의 검색 및 선택\n                    2. 받는 사람의 성명, 주소, 전화번호, 전자우편주소(또는 이동전화번호) 등의 입력\n                    3. 약관내용, 청약철회권이 제한되는 서비스, 배송료․설치비 등의 비용부담과 관련한 내용\n                    에 대한 확인\n                    4. 이 약관에 동의하고 위 제3호의 사항을 확인하거나 거부하는 표시 (예, 마우스 클릭)\n                    5. 재화 등의 구매신청 및 이에 관한 확인 또는 “몰”의 확인에 대한 동의\n                    6. 결제방법의 선택\n                    ② “몰”이 제3자에게 구매자 개인정보를 제공할 필요가 있는 경우 1) 개인정보를 제공받는 자,\n                    2) 개인정보를 제공받는 자의 개인정보 이용목적, 3) 제공하는 개인정보의 항목, 4) 개인정보\n                    를 제공받는 자의 개인정보 보유 및 이용기간을 구매자에게 알리고 동의를 받아야 합니다.\n                    (동의를 받은 사항이 변경되는 경우에도 같습니다.)\n                    ③ “몰”이 제3자에게 구매자의 개인정보를 취급할 수 있도록 업무를 위탁하는 경우에는 1) 개인\n                    정보 취급위탁을 받는 자, 2) 개인정보 취급위탁을 하는 업무의 내용을 구매자에게 알리고\n                    동의를 받아야 합니다. (동의를 받은 사항이 변경되는 경우에도 같습니다.) 다만, 서비스제공\n                    - 4 -\n                    에 관한 계약이행을 위해 필요하고 구매자의 편의증진과 관련된 경우에는 「정보통신망 이\n                    용촉진 및 정보보호 등에 관한 법률」에서 정하고 있는 방법으로 개인정보 취급방침을 통해\n                    알림으로써 고지절차와 동의절차를 거치지 않아도 됩니다.\n                    </h5 >\n                    <h4>제10조 (계약의 성립)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 제9조와 같은 구매신청에 대하여 다음 각 호에 해당하면 승낙하지 않을 수 있습니\n                    다. 다만, 미성년자와 계약을 체결하는 경우에는 법정대리인의 동의를 얻지 못하면 미성년\n                    자 본인 또는 법정대리인이 계약을 취소할 수 있다는 내용을 고지하여야 합니다.\n                    1. 신청 내용에 허위, 기재누락, 오기가 있는 경우\n                    2. 미성년자가 담배, 주류 등 청소년보호법에서 금지하는 재화 및 용역을 구매하는 경우\n                    3. 기타 구매신청에 승낙하는 것이 “몰” 기술상 현저히 지장이 있다고 판단하는 경우\n                    ② “몰”의 승낙이 제12조제1항의 수신확인통지형태로 이용자에게 도달한 시점에 계약이 성립한\n                    것으로 봅니다.\n                    ③ “몰”의 승낙의 의사표시에는 이용자의 구매 신청에 대한 확인 및 판매가능 여부, 구매신청의\n                    정정 취소 등에 관한 정보 등을 포함하여야 합니다.\n                    제11조 (지급방법)\n                    “몰”에서 구매한 재화 또는 용역에 대한 대금지급방법은 다음 각 호의 방법중 가용한 방법으\n                    로 할 수 있습니다. 다만, “몰”은 이용자의 지급방법에 대하여 재화 등의 대금에 어떠한 명목\n                    의 수수료도 추가하여 징수할 수 없습니다.\n                    1. 폰뱅킹, 인터넷뱅킹, 메일 뱅킹 등의 각종 계좌이체\n                    2. 선불카드, 직불카드, 신용카드 등의 각종 카드 결제\n                    3. 온라인무통장입금\n                    4. 전자화폐에 의한 결제\n                    5. 수령 시 대금지급\n                    6. 마일리지 등 “몰”이 지급한 포인트에 의한 결제\n                    7. “몰”과 계약을 맺었거나 “몰”이 인정한 상품권에 의한 결제\n                    8. 기타 전자적 지급 방법에 의한 대금 지급 등    \n                    </h5 >\n                    <h4>제12조 (수신확인통지․구매신청 변경 및 취소)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이용자의 구매신청이 있는 경우 이용자에게 수신확인통지를 합니다.\n                    ② 수신확인통지를 받은 이용자는 의사표시의 불일치 등이 있는 경우에는 수신확인통지를 받은\n                    후 즉시 구매신청 변경 및 취소를 요청할 수 있고 “몰”은 배송 전에 이용자의 요청이 있는\n                    경우에는 지체 없이 그 요청에 따라 처리하여야 합니다. 다만 이미 대금을 지불한 경우에는\n                    제15조의 청약철회 등에 관한 규정에 따릅니다.\n                    </h5 >\n                    <h4>제13조 (재화 등의 공급)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이용자와 재화 등의 공급시기에 관하여 별도의 약정이 없는 이상, 이용자가 청약을\n                    한 날부터 7일 이내에 재화 등을 배송할 수 있도록 주문제작, 포장 등 기타의 필요한 조치를\n                    취합니다. 다만, “몰”이 이미 재화 등의 대금의 전부 또는 일부를 받은 경우에는 대금의 전\n                    부 또는 일부를 받은 날부터 3영업일 이내에 조치를 취합니다. 이때 “몰”은 이용자가 재화\n                    등의 공급 절차 및 진행 사항을 확인할 수 있도록 적절한 조치를 합니다.\n                    ② “몰”은 이용자가 구매한 재화에 대해 배송수단, 수단별 배송비용 부담자, 수단별 배송기간 \n                    등을 명시합니다. 만약 “몰”이 약정 배송기간을 초과한 경우에는 그로 인한 이용자의 손해를 배\n                    상하여야 합니다. 다만 “몰”이 고의․과실이 없음을 입증한 경우에는 그러하지 아니합니다.    \n                    </h5 >\n                    <h4>제14조 (환급) </h4>\n                    <h5 id = 'tosContentsColor' >            \n                    “몰”은 이용자가 구매신청한 재화 등이 품절 등의 사유로 인도 또는 제공을 할 수 없을 때에\n                    는 지체 없이 그 사유를 이용자에게 통지하고 사전에 재화 등의 대금을 받은 경우에는 대금\n                    을 받은 날부터 3영업일 이내에 환급하거나 환급에 필요한 조치를 취합니다.    \n                    </h5 >\n                    <h4>제15조 (청약철회 등)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”과 재화등의 구매에 관한 계약을 체결한 이용자는 「전자상거래 등에서의 소비자보호에 관한\n                    법률」 제13조 제2항에 따른 계약내용에 관한 서면을 받은 날(그 서면을 받은 때보다 재화 등의 공급\n                    이 늦게 이루어진 경우에는 재화 등을 공급받거나 재화 등의 공급이 시작된 날을 말합니다)부터 7일\n                    이내에는 청약의 철회를 할 수 있습니다. 다만, 청약철회에 관하여 「전자상거래 등에서의 소\n                    비자보호에 관한 법률」에 달리 정함이 있는 경우에는 동 법 규정에 따릅니다.\n                    ② 이용자는 재화 등을 배송 받은 경우 다음 각 호의 1에 해당하는 경우에는 반품 및 교환을\n                    할 수 없습니다.\n                    1. 이용자에게 책임 있는 사유로 재화 등이 멸실 또는 훼손된 경우(다만, 재화 등의 내용을\n                    확인하기 위하여 포장 등을 훼손한 경우에는 청약철회를 할 수 있습니다)\n                    2. 이용자의 사용 또는 일부 소비에 의하여 재화 등의 가치가 현저히 감소한 경우\n                    3. 시간의 경과에 의하여 재판매가 곤란할 정도로 재화등의 가치가 현저히 감소한 경우\n                    4. 같은 성능을 지닌 재화 등으로 복제가 가능한 경우 그 원본인 재화 등의 포장을 훼손한 경우\n                    ③ 제2항제2호 내지 제4호의 경우에 “몰”이 사전에 청약철회 등이 제한되는 사실을 소비자가\n                    쉽게 알 수 있는 곳에 명기하거나 시용상품을 제공하는 등의 조치를 하지 않았다면 이용자\n                    의 청약철회 등이 제한되지 않습니다.\n                    ④ 이용자는 제1항 및 제2항의 규정에 불구하고 재화 등의 내용이 표시·광고 내용과 다르거나\n                    계약내용과 다르게 이행된 때에는 당해 재화 등을 공급받은 날부터 3월 이내, 그 사실을 안\n                    날 또는 알 수 있었던 날부터 30일 이내에 청약철회 등을 할 수 있습니다.    \n                    </h5 >\n                    <h4>제16조 (청약철회 등의 효과)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이용자로부터 재화 등을 반환받은 경우 3영업일 이내에 이미 지급받은 재화 등의 대\n                    금을 환급합니다. 이 경우 “몰”이 이용자에게 재화등의 환급을 지연한때에는 그 지연기간에\n                    대하여 「전자상거래 등에서의 소비자보호에 관한 법률 시행령」제21조의2에서 정하는 지연\n                    이자율을 곱하여 산정한 지연이자를 지급합니다.\n                    ② “몰”은 위 대금을 환급함에 있어서 이용자가 신용카드 또는 전자화폐 등의 결제수단으로 재\n                    화 등의 대금을 지급한 때에는 지체 없이 당해 결제수단을 제공한 사업자로 하여금 재화 등\n                    의 대금의 청구를 정지 또는 취소하도록 요청합니다.\n                    ③ 청약철회 등의 경우 공급받은 재화 등의 반환에 필요한 비용은 이용자가 부담합니다. “몰”은\n                    이용자에게 청약철회 등을 이유로 위약금 또는 손해배상을 청구하지 않습니다. 다만 재화 등\n                    의 내용이 표시·광고 내용과 다르거나 계약내용과 다르게 이행되어 청약철회 등을 하는 경\n                    우 재화 등의 반환에 필요한 비용은 “몰”이 부담합니다.\n                    ④ 이용자가 재화 등을 제공받을 때 발송비를 부담한 경우에 “몰”은 청약철회 시 그 비용을\n                    누가 부담하는지를 이용자가 알기 쉽도록 명확하게 표시합니다.   \n                    </h5 >\n                    <h4>제17조 (개인정보보호)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이용자의 개인정보 수집시 서비스제공을 위하여 필요한 범위에서 최소한의 개인정보\n                    를 수집합니다.\n                    ② “몰”은 회원가입시 구매계약이행에 필요한 정보를 미리 수집하지 않습니다. 다만, 관련 법령\n                    상 의무이행을 위하여 구매계약 이전에 본인확인이 필요한 경우로서 최소한의 특정 개인정\n                    보를 수집하는 경우에는 그러하지 아니합니다.\n                    ③ “몰”은 이용자의 개인정보를 수집·이용하는 때에는 당해 이용자에게 그 목적을 고지하고 동의를\n                    받습니다.\n                    ④ “몰”은 수집된 개인정보를 목적외의 용도로 이용할 수 없으며, 새로운 이용목적이 발생한 경\n                    우 또는 제3자에게 제공하는 경우에는 이용·제공단계에서 당해 이용자에게 그 목적을 고지\n                    하고 동의를 받습니다. 다만, 관련 법령에 달리 정함이 있는 경우에는 예외로 합니다.\n                    ⑤ “몰”이 제2항과 제3항에 의해 이용자의 동의를 받아야 하는 경우에는 개인정보관리 책임자\n                    의 신원(소속, 성명 및 전화번호, 기타 연락처), 정보의 수집목적 및 이용목적, 제3자에 대한\n                    정보제공 관련사항(제공받은자, 제공목적 및 제공할 정보의 내용) 등 「정보통신망 이용촉진\n                    및 정보보호 등에 관한 법률」 제22조제2항이 규정한 사항을 미리 명시하거나 고지해야 하\n                    며 이용자는 언제든지 이 동의를 철회할 수 있습니다.\n                    ⑥ 이용자는 언제든지 “몰”이 가지고 있는 자신의 개인정보에 대해 열람 및 오류정정을 요구할\n                    수 있으며 “몰”은 이에 대해 지체 없이 필요한 조치를 취할 의무를 집니다. 이용자가 오류의\n                    정정을 요구한 경우에는 “몰”은 그 오류를 정정할 때까지 당해 개인정보를 이용하지 않습니\n                    다.\n                    ⑦ “몰”은 개인정보 보호를 위하여 이용자의 개인정보를 취급하는 자를 최소한으로 제한하여야 하\n                    며 신용카드, 은행계좌 등을 포함한 이용자의 개인정보의 분실, 도난, 유출, 동의 없는 제3자 제\n                    공, 변조 등으로 인한 이용자의 손해에 대하여 모든 책임을 집니다.\n                    ⑧ “몰” 또는 그로부터 개인정보를 제공받은 제3자는 개인정보의 수집목적 또는 제공받은 목적\n                    을 달성한 때에는 당해 개인정보를 지체 없이 파기합니다.\n                    ⑨ “몰”은 개인정보의 수집·이용·제공에 관한 동의 란을 미리 선택한 것으로 설정해두지 않습니다. 또\n                    한 개인정보의 수집·이용·제공에 관한 이용자의 동의거절시 제한되는 서비스를 구체적으로 명시하\n                    고, 필수수집항목이 아닌 개인정보의 수집·이용·제공에 관한 이용자의 동의 거절을 이유로 회원가\n                    입 등 서비스 제공을 제한하거나 거절하지 않습니다.    \n                    </h5 >\n                    <h4>제18조 (“몰”의 의무)</h4>\n                    <h5 id = 'tosContentsColor' >            \n                    ① “몰”은 법령과 이 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 이 약관이 정\n                    하는 바에 따라 지속적이고, 안정적으로 재화․용역을 제공하는데 최선을 다하여야 합니다.\n                    ② “몰”은 이용자가 안전하게 인터넷 서비스를 이용할 수 있도록 이용자의 개인정보(신용정보\n                    포함)보호를 위한 보안 시스템을 갖추어야 합니다.\n                    ③ “몰”이 상품이나 용역에 대하여 「표시․광고의 공정화에 관한 법률」 제3조 소정의 부당한\n                    표시․광고행위를 함으로써 이용자가 손해를 입은 때에는 이를 배상할 책임을 집니다.\n                    ④ “몰”은 이용자가 원하지 않는 영리목적의 광고성 전자우편을 발송하지 않습니다.    \n                    </h5 >\n                    <h4>제19조 (회원의 ID 및 비밀번호에 대한 의무)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① 제17조의 경우를 제외한 ID와 비밀번호에 관한 관리책임은 회원에게 있습니다.\n                    ② 회원은 자신의 ID 및 비밀번호를 제3자에게 이용하게 해서는 안됩니다.\n                    ③ 회원이 자신의 ID 및 비밀번호를 도난당하거나 제3자가 사용하고 있음을 인지한 경우에는\n                    바로 “몰”에 통보하고 “몰”의 안내가 있는 경우에는 그에 따라야 합니다.    \n                    </h5 >\n                    <h4>제20조 (이용자의 의무)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    이용자는 다음 행위를 하여서는 안 됩니다.\n                    1. 신청 또는 변경시 허위 내용의 등록\n                    2. 타인의 정보 도용\n                    3. “몰”에 게시된 정보의 변경\n                    4. “몰”이 정한 정보 이외의 정보(컴퓨터 프로그램 등) 등의 송신 또는 게시\n                    5. “몰” 기타 제3자의 저작권 등 지적재산권에 대한 침해\n                    6. “몰” 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위\n                    7. 외설 또는 폭력적인 메시지, 화상, 음성, 기타 공서양속에 반하는 정보를 몰에 공개 또는\n                    게시하는 행위    \n                    </h5 >\n                    <h4>제21조 (연결“몰”과 피연결“몰” 간의 관계)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① 상위 “몰”과 하위 “몰”이 하이퍼링크(예: 하이퍼링크의 대상에는 문자, 그림 및 동화상 등이\n                    포함됨)방식 등으로 연결된 경우, 전자를 연결 “몰”(웹사이트)이라고 하고 후자를 피연결\n                    “몰”(웹사이트)이라고 합니다.\n                    ② 연결 “몰”은 피연결“몰”이 독자적으로 제공하는 재화 등에 의하여 이용자와 행하는 거래에\n                    대해서 보증 책임을 지지 않는다는 뜻을 연결“몰”의 초기화면 또는 연결되는 시점의 팝업화\n                    면으로 명시한 경우에는 그 거래에 대한 보증 책임을 지지 않습니다.    \n                    </h5 >\n                    <h4>제22조 (저작권의 귀속 및 이용제한)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”이 작성한 저작물에 대한 저작권 기타 지적재산권은 “몰”에 귀속합니다.\n                    ② 이용자는 “몰”을 이용함으로써 얻은 정보 중 “몰”에게 지적재산권이 귀속된 정보를 “몰”의\n                    사전 승낙 없이 복제, 송신, 출판, 배포, 방송 기타 방법에 의하여 영리목적으로 이용하거나\n                    제3자에게 이용하게 하여서는 안 됩니다.\n                    ③ “몰”은 약정에 따라 이용자에게 귀속된 저작권을 사용하는 경우 당해 이용자에게 통보하여\n                    야 합니다.    \n                    </h5 >\n                    <h4>제23조 (분쟁해결)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”은 이용자가 제기하는 정당한 의견이나 불만을 반영하고 그 피해를 보상처리하기 위하\n                    여 피해보상처리기구를 설치․운영합니다.\n                    ② “몰”은 이용자로부터 제출되는 불만사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만,\n                    신속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리일정을 즉시 통보해 드립니다.\n                    ③ “몰”과 이용자 간에 발생한 전자상거래 분쟁과 관련하여 이용자의 피해구제신청이 있는 경우\n                    에는 공정거래위원회 또는 시·도지사가 의뢰하는 분쟁조정기관의 조정에 따를 수 있습니다.    \n                    </h5 >\n                    <h4>제24조 (재판권 및 준거법)</h4>\n                    <h5 id = 'tosContentsColor' >\n                    ① “몰”과 이용자 간에 발생한 전자상거래 분쟁에 관한 소송은 제소 당시의 이용자의 주소에\n                    의하고, 주소가 없는 경우에는 거소를 관할하는 지방법원의 전속관할로 합니다. 다만, 제소\n                    당시 이용자의 주소 또는 거소가 분명하지 않거나 외국 거주자의 경우에는 민사소송법상의\n                    관할법원에 제기합니다.\n                    ② “몰”과 이용자 간에 제기된 전자상거래 소송에는 한국법을 적용합니다.    \n                    </h5 >\n                    \n                </div>\n            </div>\n        </div>\n\n        \n    )\n}\n\nexport default TOS;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport { qs } from 'url-parse';\n\nimport thumnailWhite from '../contentsSample/LogoTshirts-2.jpeg';\nimport thumnailBlack from '../contentsSample/LogoTshirts-3.jpeg';\n\nimport '../styles/CartStyle.css';\n\nimport TOS from './TOS';\n\nconst MyCart = ({ history }) => {\n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    }\n\n    // window.scrollTo(0,0);\n\n    const id = sessionStorage.getItem(\"id\");\n    const seq = sessionStorage.getItem(\"seq\");\n\n    // 이새끼 rendering시키기.\n    // class 형태로 사용 - 지랄함\n    // component 형태로 사용 - 지랄함\n    // function return 형태로 사용 - value에서 지랄함\n    // useState에 할당 후 뿌려주는 형태로 사용 - 개지랄함\n    // useEffect 미사용 - state 예토전생 후 무한 츠쿠요미 걸려서 발작함\n    \n    const [orderCart, setOrderCart] = useState([{\n        modelSeq : 0,\n        orderColor : '',\n        orderPsc : 0,\n        orderSize : '',\n        orderModelNo : '',\n        orderPrice : 0,\n        orderModelName : '',\n        orderModelPrice : ''\n    }]);\n\n    const [trigger, setTrigger] = useState('');\n    const [totalPrice, setTotalPrice] = useState(0);\n        \n    useEffect(async() => {\n\n        axios.post('/api/modelInfo/GetCart', null, { params : {\n            id,\n            seq\n        }}).then((response) => {\n\n            if(response.data.length > 0) {\n\n                setTrigger(\"items\");\n                const _orderCart = response.data.map((orderData) => ({\n                    modelSeq : orderData.modelSeq,\n                    orderColor : orderData.orderColor,\n                    orderPsc : orderData.orderPsc,\n                    orderSize : orderData.orderSize,\n                    orderModelNo : orderData.orderModelNo,\n                    orderPrice : orderData.orderPrice,\n                    orderModelName : orderData.orderModelName,\n                    orderModelPrice : orderData.orderModelPrice\n                }));\n\n                setOrderCart(_orderCart);\n\n            } else {\n                setTrigger(\"none\");\n            }\n\n        })\n    \n    }, []);\n    \n    const checkedBox = () => {\n        var totalPrice = 0;\n        var temp = 0;\n        for(var i = 0; i < document.getElementsByClassName('checkInput').length; i++){\n\n            if(document.getElementById('checking' + orderCart[i].modelSeq).checked){\n\n                if(orderCart[i].orderPrice < 50000) {\n\n                    temp = orderCart[i].orderPrice + 3000;\n                    \n                    if(temp + totalPrice > 50000) {\n\n                        if(totalPrice > 50000) {\n                            temp -= 3000;\n                            totalPrice += temp;\n                        } else {\n                            temp -= 3000;\n                            totalPrice -= 3000;\n                            totalPrice += temp;\n                        }\n\n                    } else {\n                        totalPrice += temp;\n                    }\n                } else {\n\n                    if(totalPrice == 0) {\n                        totalPrice += orderCart[i].orderPrice;\n                    } else {\n                        if(temp + orderCart[i].orderPrice > 50000) {\n                            if(orderCart[i].orderPrice > 50000) {\n                                totalPrice += orderCart[i].orderPrice;\n                            } else {\n                                totalPrice -= 3000;\n                                totalPrice += orderCart[i].orderPrice;\n                            }\n                        } else {\n                            totalPrice += orderCart[i].orderPrice;\n                        }\n                    }\n                }\n            } \n        }\n        setTotalPrice(totalPrice);\n    };\n\n    const deleteTable = () => {\n\n        const selected = [];\n\n        for(var i = 0; i < document.getElementsByClassName('checkInput').length; i++){\n\n            if(document.getElementById('checking' + orderCart[i].modelSeq).checked){\n                selected.push(orderCart[i].modelSeq);\n            }\n\n        }\n        if(window.confirm(\"선택한 상품을 CART에서 삭제합니다. \")) {\n\n            axios.post('/api/modelInfo/RemoveTable', null, { params : {\n                selected : selected,\n                id,\n                seq\n            },\n            paramsSerializer : params => {\n                return qs.stringify(params);\n            }\n        \n            }).then((response) => {\n                if(response.data == \"removed\") {\n                    alert(\"삭제되었습니다.\");\n                    document.location.href = \"/MyCart\";\n                } else if(response.data == \"failed\") {\n                    alert(\"selected data not found in table\");\n                }   \n            })\n\n        } else {\n            \n        }\n    }\n\n    var thumnailShot = '';\n\n    return (\n        <div class = 'CartContainer'>\n\n            <div>\n                <h3> CART </h3>\n                <hr style = {{ width : '100%'}} />\n            </div>\n\n            <table class = 'cartTable'>\n                <th> </th>\n                <th id = 'productInfoInCart'> 상품정보 </th>\n                <th id = 'productPriceInCart'> 상품금액 </th>\n                <th id = 'productPcsInCart'> 수량 </th>\n                <th id = 'productDeliveryInCart'> 배송 </th>\n                <th id = 'paymentInCart'> 결제금액 </th> \n\n                {\n                    orderCart.map((orderData, index) => {\n                \n                        if(orderData.orderColor == 'black') {\n                            thumnailShot = thumnailBlack;\n                        } else if(orderData.orderColor == 'white') {\n                            thumnailShot = thumnailWhite;\n                        }\n\n                        if(trigger == 'none') {\n                            \n                            return (\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td> </td>\n                                    <td style ={{width : '300px',textAlign : 'left'}}> <p> 추가된 상품이 없습니다.</p> </td>\n                                </tr>\n                            );\n\n                        } else if(trigger == 'items') {\n\n                            var orderPrice = orderData.orderPrice;\n                            var deliOrder = 0;\n\n                            if(orderData.orderPrice < 50000) {\n                                deliOrder = 3000;\n                            } else {\n                                deliOrder = 0;\n                            }\n\n                            orderPrice += deliOrder;\n\n                            return (\n\n                                <tr>\n                                    <td key = {index}>\n                                        <label class = 'checker' for = {\"checking\" + orderData.modelSeq} >\n                                            <input type=\"checkbox\" id = {\"checking\" + orderData.modelSeq} class = 'checkInput' onClick = {checkedBox} />\n                                            <span class=\"checkmark\"></span>\n                                        </label>\n                                    </td>\n                                    <td key = {index}>\n                                        <img src = {thumnailShot} id = 'buyThumbnail'/>\n                                        <p id = 'thumbnailText' > {orderData.orderModelName} </p> \n                                        <p id = 'thumbnailText' >Model No. {orderData.orderModelNo}</p>\n                                        <p id = 'thumbnailText' >color : {orderData.orderColor} / size : {orderData.orderSize}</p>                        \n                                    </td>\n                                    <td key = {index}>\n                                        <p id = 'tableText'>{orderData.orderModelPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</p> \n                                    </td>\n                                    <td key = {index}>\n                                        <p id = 'tableText'>{orderData.orderPsc}</p>\n                                    </td>\n                                    <td key = {index}>\n                                    <p id = 'tableText' name = {'deliveryPrice' + orderData.modelSeq}> {deliOrder}원 </p>\n                                        <p id = 'tableDeliveryText'> (50,000원 이상 무료배송) </p>\n                                    </td>\n                                    <td key = {index}>\n                                        <p id = 'tableText'> {orderPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} </p>\n                                    </td>\n                                </tr>\n    \n                            )\n\n                        }\n\n                    })\n                } \n\n\n            </table>\n\n            <hr style = {{ width : '100%'}} />\n\n            <div>\n                <div class = 'cartPaymentContainer'>\n                    <h3 id = 'cartNaverPayBtn'> N pay</h3>\n                </div>\n                <div class = 'deleteContainer' onClick = {deleteTable}>\n                    <h3 id = 'deleteBtn'> DELETE</h3>\n                </div>\n                <h3 id = 'cartPaymentPrice'> {totalPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} 원 </h3>\n                <h3 id = 'cartPaymentPrice'> Total &nbsp;</h3>\n            </div>\n\n            <TOS />\n\n        </div>\n    );\n}\n\n\nexport default MyCart;","import React, { Fragment, useState } from 'react';\nimport axios from 'axios';\n\nimport '../styles/ProfileStyle.css';\n\nconst Profile = ({ history }) => {\n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    }\n\n    const prevAccountInfo = {\n        seq : sessionStorage.getItem(\"seq\"),\n        id : sessionStorage.getItem(\"id\"),\n        name : sessionStorage.getItem(\"name\"),\n        pw : sessionStorage.getItem(\"password\"),\n        address : sessionStorage.getItem(\"address\"),\n        postCode : sessionStorage.getItem(\"postCode\"),\n        phoneNumber : sessionStorage.getItem(\"phoneNumber\"),\n        email : sessionStorage.getItem(\"email\")\n    }\n    \n\n    const [signedAccountInfo, setSignedAccountInfo] = useState({\n        name : sessionStorage.getItem(\"name\"),\n        pw : sessionStorage.getItem(\"password\"),\n        address : sessionStorage.getItem(\"address\"),\n        postCode : sessionStorage.getItem(\"postCode\"),\n        phoneNumber : sessionStorage.getItem(\"phoneNumber\"),\n        email : sessionStorage.getItem(\"email\")\n    });\n\n    const onChange = (e) => {\n\n        const {value, name} = e.target;\n\n        setSignedAccountInfo({\n            ...signedAccountInfo,\n            [name]:value\n        });\n\n    }\n\n    const AccountChange = () => {\n        if(\n           prevAccountInfo.name == signedAccountInfo.name &&\n           prevAccountInfo.pw == signedAccountInfo.pw &&\n           prevAccountInfo.address == signedAccountInfo.address &&\n           prevAccountInfo.postCode == signedAccountInfo.postCode &&\n           prevAccountInfo.phoneNumber == signedAccountInfo.phoneNumber &&\n           prevAccountInfo.email == signedAccountInfo.email\n        ) {\n            alert(\"변경된 사항이 없습니다. 기존 정보를 유지합니다.\");\n            document.location.href = \"/Profile\";\n        } else {\n\n            const {name, pw, address, postCode, phoneNumber, email} = signedAccountInfo;\n            const id = prevAccountInfo.id;\n            const seq = prevAccountInfo.seq;\n\n            if(window.confirm(\"수정한 정보로 변경됩니다.\")) {\n\n                axios.post('/api/Sign/AccountModify', null, { params : {\n                    seq,\n                    id,\n                    name,\n                    pw,\n                    address,\n                    postCode,\n                    phoneNumber,\n                    email\n                }}).then((response) => {\n\n                    if(response.data.updateResult == \"success\") {\n                        \n                        sessionStorage.setItem(\"sessionInfo\", response.data.sessionInfo);\n                        sessionStorage.setItem(\"seq\", response.data.SignedUserSeq);\n                        sessionStorage.setItem(\"name\", response.data.SignedUserName);\n                        sessionStorage.setItem(\"id\", response.data.SignedUserId);\n                        sessionStorage.setItem(\"password\", response.data.SignedUserPassword);\n                        sessionStorage.setItem(\"address\", response.data.SignedUserAddress);\n                        sessionStorage.setItem(\"postCode\", response.data.SignedUserPostCode);\n                        sessionStorage.setItem(\"phoneNumber\", response.data.SignedUserPhoneNumber);\n                        sessionStorage.setItem(\"email\", response.data.SignedUserEmail);\n\n                        alert(\"변경되었습니다.\");\n                        document.location.href = \"/Profile\";\n                    } else if(response.data.updateResult == \"failed\") {\n                        alert(\"되겠냐 씹년아\");\n                    }\n                });\n\n            } else {\n                // deny\n                document.location.href = \"/Profile\";\n            } \n        }\n    }\n\n    const manageMenuMembers = () => {\n        history.push(\"/membersManage\");\n    }\n\n    const manageMenuNotice = () => {\n        history.push(\"/noticeManage\");\n    }\n\n    const manageMenuContact = () => {\n        history.push(\"/emailSend\");\n    }\n\n    const manageMenuPopUp = () => {\n        history.push(\"/popUpManage\");\n    }\n\n    const ManagerContents = () => {\n\n        if(sessionStorage.getItem(\"auth\") == \"manager\") {\n            return (\n                <div class = \"managersContainer\">\n                    <h4> For Managers </h4>\n                    <hr style = {{ border : '0.5px solid black', marginTop : '-15px' }}/>\n\n                    <div class = \"membersButton\" onClick = {manageMenuMembers}>\n                        <p id = \"membersButtonText\"> MEMBERS </p>\n                    </div>\n\n                    <div class = \"noticeButton\" onClick = {manageMenuNotice}>\n                        <p id = \"noticeButtonText\"> NOTICE </p>\n                    </div>\n\n                    <div class = \"contactButton\" onClick  = {manageMenuContact}>\n                        <p id = \"contactButtonText\"> SEND MAIL </p>\n                    </div>\n\n                    <div class = \"popUpButton\">\n                        <p id = \"popUpButtonText\"> POP UP </p>\n                    </div>\n                </div>\n            );\n        } else {\n            // empty container\n            return(\n                <Fragment>\n    \n                </Fragment>            \n            )\n        }\n\n    }\n\n    const MyCart = () => {\n        history.push(\"/MyCart\");\n    }\n\n    return (\n        <div>\n            <div class = \"profileContainer\">\n                <h4>Account Profile</h4>\n                <hr style = {{ border : '0.5px solid black', marginTop : '-15px' }}/>\n\n                <div class = \"profileInfoColummContainer\">\n\n                    <p id = \"profileInfoContainersText\"> NAME </p>\n                    <p id = \"profileInfoContainersText\"> ID </p>\n                    <p id = \"profileInfoContainersText\"> PASSWORD </p>\n                    <p id = \"profileInfoContainersText_textArea\"> ADDRESS </p>\n                    <p id = \"profileInfoContainersText_underTextArea\"> POSTCODE </p>\n                    <p id = \"profileInfoContainersText\"> PHONE </p>\n                    <p id = \"profileInfoContainersText\"> EMAIL </p>\n                  \n                </div>\n\n                <div class = \"profileInfoValueContainer\" >\n                    <input class = \"infoValuesInput\" name = \"name\" type = \"text\" value = {signedAccountInfo.name} onChange = {onChange}/>\n                    <input class = \"infoValuesInput\" readOnly = \"true\" name = \"id\" type = \"text\" value = {prevAccountInfo.id}/>\n                    <input class = \"infoValuesInput\" name = \"pw\" type = \"password\" value = {signedAccountInfo.pw} onChange = {onChange}/>\n                    <textarea class = \"infoValuesInputArea\" name = \"address\" type = \"text\" value = {signedAccountInfo.address} onChange = {onChange}/>\n                    <input class = \"infoValuesInput\" name = \"postCode\" type = \"text\" value = {signedAccountInfo.postCode} onChange = {onChange}/>\n                    <input class = \"infoValuesInput\" name = \"phoneNumber\" type = \"text\" value = {signedAccountInfo.phoneNumber} onChange = {onChange}/>\n                    <input class = \"infoValuesInput\" name = \"email\" type = \"text\" value = {signedAccountInfo.email} onChange = {onChange}/>\n                </div>\n\n                <div class = \"buttonContainer\">\n\n                    <div class = \"cartButton\" onClick = {MyCart}> \n                        <p id = \"cartButtonText\" > MY CART </p> \n                    </div>\n\n                    <div class = \"modifyButton\" onClick = {AccountChange}>\n                        <p id = \"modifyButtonText\"> MODIFY</p>\n                    </div>\n\n                    <div class = \"historyButton\">\n                        <p id = \"historyButtonText\" > PURCHASE HISTORY </p>\n                    </div>\n                </div>\n\n                \n                <ManagerContents />\n        \n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default Profile;","import React, {useState, Component, Fragment} from 'react';\nimport '../styles/SelectorStyle.css';\n\nconst SizeSelector = ({dressSize, props }) => {\n\n    return (\n        \n            <div class = 'sizeSelectorContainer'>\n                <h4  id = 'sizeTitle'> size </h4>\n                <div class = 'sizeSelector'>\n                    {dressSize.map(value => (\n                    <Fragment>\n                        <input type=\"radio\" name=\"size\" id={value.size} value={value.size} onClick = {props}/>\n                        <label class = 'sizeCheck' for = {value.size} ><span class={value.size}>{value.sizeSummary}</span></label>\n                    </Fragment>\n                    ))}\n                </div>      \n            </div>\n        \n        \n    );\n};\n\nexport default React.memo(SizeSelector);","import React, { Fragment } from 'react';\n\nimport '../styles/SelectorStyle.css';\n\nconst ColorSelector = ({dressColor, props}) => {\n\n    return (\n        <div class = 'colorSelectorContainer' >\n            <h4 id = 'colorTitle'> color </h4>\n            \n            {dressColor.map(value => (\n            <Fragment>\n                <input  type=\"radio\" name=\"color\" id={value.color} value={value.color} onChange = {props} />\n                <label  class = 'colorCheck' for = {value.color}><span class={value.color}></span></label>\n            </Fragment>\n            ))}    \n        </div>\n    );\n}\n\nexport default ColorSelector;","import React from 'react';\n\nconst Counter = ({ minus, plus, psc}) => {\n    \n    return (\n        <div class = 'counterContainer' >\n            <h4 id = 'counterTitle'> pcs.</h4>\n            <button id = 'Counter-minus' onClick={minus} >-</button>\n            <p id = 'psc'>{psc}</p>\n            <button id = 'Counter-plus'  onClick = {plus}>+</button>\n        </div>\n    );\n}\n\nexport default Counter;","export default __webpack_public_path__ + \"static/media/cart2.ad224b83.svg\";","export default __webpack_public_path__ + \"static/media/heart.721c5674.svg\";","import React, {useState, useCallback, useEffect} from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\n\nimport '../styles/SelectorStyle.css';\n\nimport SizeSelector from '../Selector/SizeSelector';\nimport ColorSelector from '../Selector/ColorSelector';\nimport Counter from '../Selector/Counter';\n\nimport cart from '../sampleIcons/cart2.svg';\nimport heart from '../sampleIcons/heart.svg';\n\nconst Selector = ({history, dressThumbnail, dressColor, dressSize, model}) => {\n    \n    const [psc, setPsc] = useState(1);\n    const [price, setPrice] = useState(model.model.modelPrice);\n    const [modelFullNo, setModelFullNo] = useState('');\n    const [inputs, setInputs] = useState({\n        color : '',\n        size : ''\n    });\n\n    const {color, size} = inputs;\n    \n    const onChange = (e) => {\n        \n        const { value, name } = e.target;\n        var fullModelName = model.model.modelNo;\n        \n        if(value == 'small') {\n            setModelFullNo(fullModelName + 'S');\n        } else if( value == 'medium') {\n            setModelFullNo(fullModelName + 'M');\n        } else if( value == 'large') {\n            setModelFullNo(fullModelName + 'L');\n        } else if( value == 'xlarge') {\n            setModelFullNo(fullModelName + 'XL');\n        } else if( value == 'xxlarge') {\n            setModelFullNo(fullModelName + 'XXL');\n        }\n\n        setInputs({\n            ...inputs,\n            [name]:value\n        });\n        \n    };\n    \n    const onIncrease = useCallback(() => {\n        setPsc(psc + 1);\n        setPrice(price + 32000);\n    });\n    \n    const onDecrease = useCallback(() => {\n        if(psc <= 1) {\n            setPsc(1);\n        } else {\n            setPsc(psc - 1);\n            setPrice(price - 32000);\n        }\n    });\n\n    function sendOrder({history}) {\n\n        // axios에서 받아온 기본 data에 user가 선택한 데이터로 수정하여 재저장.\n        const orderColor = inputs.color;\n        const orderSize = inputs.size;\n        const orderPsc = psc;\n        const orderModelNo = modelFullNo;\n        const orderPrice = price;\n\n        // modelName, price는 고정값이므로 axios에서 받아온 data 사용\n        const orderModelName = model.model.modelName;\n        const orderModelPrice = model.model.modelPrice;\n\n        // aws storage에 img집어넣으면 그 때 수정할거.\n        let thumnailShot = '';\n        if(orderColor == 'black') {\n            thumnailShot = dressThumbnail.thumnailBlack;\n        } else if(orderColor == 'white') {\n            thumnailShot = dressThumbnail.thumnailWhite;\n        }\n\n        const orders = {\n            orderColor,\n            orderSize,\n            orderPsc,\n            orderModelNo,\n            orderPrice,\n            orderModelName,\n            orderModelPrice,\n            thumnailShot\n        };\n\n        if(orderColor == '') {\n            alert('[색상] 옵션을 선택해 주세요.');\n        } else if(orderSize == '') {\n            alert('[사이즈] 옵션을 선택해 주세요. ');\n        } else if(sessionStorage.getItem(\"sessionInfo\") == null) {\n            history.push({ pathname : '/signInPage'})\n        } else {\n            return (\n                history.push({\n                    pathname : '/buy',\n                    state : { orderInfo : orders }\n                })\n            );\n        }\n    }    \n\n    const addCart = () => {\n        // axios에서 받아온 기본 data에 user가 선택한 데이터로 수정하여 재저장.\n        const orderColor = inputs.color;\n        const orderSize = inputs.size;\n        const orderPsc = psc;\n        const orderModelNo = modelFullNo;\n        const orderPrice = price;\n\n        // modelName, price는 고정값이므로 axios에서 받아온 data 사용\n        const orderModelName = model.model.modelName;\n        const orderModelPrice = model.model.modelPrice;\n\n        // aws storage에 img집어넣으면 그 때 수정할거.\n        // let thumnailShot = '';\n        \n        // if(orderColor == 'black') {\n        //     thumnailShot = dressThumbnail.thumnailBlack;\n        // } else if(orderColor == 'white') {\n        //     thumnailShot = dressThumbnail.thumnailWhite;\n        // }\n\n        const id = sessionStorage.getItem(\"id\");\n        const seq = sessionStorage.getItem(\"seq\");\n\n        if(orderColor == '') {\n            alert('[색상] 옵션을 선택해 주세요.');\n        } else if(orderSize == '') {\n            alert('[사이즈] 옵션을 선택해 주세요. ');\n        } else if(sessionStorage.getItem(\"sessionInfo\") == null) {\n            history.push({ pathname : '/signInPage'})\n        } else {\n\n            // Backend server\n            axios.post('/api/modelInfo/AddCart', null, { params : {\n                id,\n                seq,\n                orderColor,\n                orderSize,\n                orderPsc,\n                orderModelNo,\n                orderPrice,\n                orderModelName,\n                orderModelPrice\n            }}).then((response) => {\n\n                if(response.data == \"addToCart\") {\n                   \n                    alert(\"CART에 추가되었습니다. profile - MYCART에서 확인하실 수 있습니다.\");\n                    \n                } else if(response.data == \"failed\") {\n                    alert(\"되겠냐 씹년아\");\n                }\n            });\n        }\n    }\n\n    $(function(){\n        $(window).scroll(function(){  \n            var rollIt = $(this).scrollTop() >= 1000; \n            var windowSize = $(window).width();\n\n            if(rollIt){ \n                // scroll down\n                if(windowSize >= 1400 && windowSize <= 1800){\n                    $(\".selector\").css({\"marginLeft\":\"63%\"});    \n                }else if(windowSize > 1800 && windowSize <= 1920) {\n                    $(\".selector\").css({\"marginLeft\":\"57%\"});    \n                } else if(windowSize > 1920 && windowSize <= 2560) {\n                    $(\".selector\").css({\"marginLeft\":\"60%\"});    \n                }\n                \n            } else {\n                // scroll up\n                if(windowSize >= 1400 && windowSize <= 1800){\n                    $(\".selector\").css({\"marginLeft\":\"45%\"});  \n                }else if(windowSize > 1800 && windowSize <= 1920) {\n                    $(\".selector\").css({\"marginLeft\":\"45%\"});    \n                } else if(windowSize > 1920 && windowSize <= 2560) {\n                    $(\".selector\").css({\"marginLeft\":\"35%\"});    \n                } \n                \n            }\n        });\n    });\n\n    \n    return (\n            <div class = 'selectContainer'>\n                <div class = 'selector'>\n                    <h5 id = 'title'> ROMAN88 / model no. {model.model.modelNo} </h5> \n                    <p id = 'dressName' > {model.model.modelName} </p> \n                    \n                    <p  id = 'price' > KRW {model.model.modelPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} </p>\n                    <hr id = 'bar1' />\n\n                    <ColorSelector dressColor = {dressColor} props = {onChange} />\n                                \n                    <Counter plus = {onIncrease} minus = {onDecrease} psc = {psc} />\n\n                    <SizeSelector dressSize = {dressSize} props = {onChange} />\n                    \n                    <hr id = 'bar2' />\n\n                    <div class = 'selectorContainer'>\n                        <h4> order </h4>\n                        <div class = 'selectorMenu'>\n                            <div class = 'colorText'>\n                                <p> {color} </p>\n                            </div>\n                            <div class = 'pscText'>\n                                <p> {psc} </p>\n                            </div>\n                            <div class = 'sizeText' >\n                                <p> {size} </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h4 id = 'total' > total </h4>\n                        <p id = 'totalPrice'> {price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} </p>\n                    </div>\n\n                    <hr id = 'bar3' />\n\n                    <div>\n                        <div class = 'buy' onClick = { () => sendOrder({history})}>\n                            <p  id = 'buyButton'> BUY NOW </p>\n                            <img src = {heart} id = 'buyImg' />       \n                        </div>\n\n                        <div class = 'buy' onClick = {addCart} id = 'cartContainer'>\n                            <p id = 'cartButton'> ADD CART </p>\n                            <img src = {cart} id = 'cartImg' />\n                        </div>\n                    </div>\n\n                </div>\n\n\n            </div>\n    )\n}\n\nexport default React.memo(Selector);","export default __webpack_public_path__ + \"static/media/LogoTshirts-4.ce870033.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-5.c43b71f4.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-6.d4725c30.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-7.19a522a9.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-8.8040996f.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-9.d60a4383.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-10.a2b36189.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-11.0c0f6334.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-12.a05ba2f1.jpeg\";","export default __webpack_public_path__ + \"static/media/LogoTshirts-13.c192238d.jpeg\";","import React from 'react';\n\nimport '../styles/DetailContentsStyle.css';\nimport Selector from './Selector';\n\nimport sample_1 from '../contentsSample/LogoTshirts-1.jpeg';\nimport sample_2 from '../contentsSample/LogoTshirts-2.jpeg';\nimport sample_3 from '../contentsSample/LogoTshirts-3.jpeg';\nimport sample_4 from '../contentsSample/LogoTshirts-4.jpeg';\nimport sample_5 from '../contentsSample/LogoTshirts-5.jpeg';\nimport sample_6 from '../contentsSample/LogoTshirts-6.jpeg';\nimport sample_7 from '../contentsSample/LogoTshirts-7.jpeg';\nimport sample_8 from '../contentsSample/LogoTshirts-8.jpeg';\nimport sample_9 from '../contentsSample/LogoTshirts-9.jpeg';\nimport sample_10 from '../contentsSample/LogoTshirts-10.jpeg';\nimport sample_11 from '../contentsSample/LogoTshirts-11.jpeg';\nimport sample_12 from '../contentsSample/LogoTshirts-12.jpeg';\nimport sample_13 from '../contentsSample/LogoTshirts-13.jpeg';\nimport sample_14 from '../contentsSample/LogoTshirts-14.jpeg';\nimport {useLocation} from 'react-router';\n\nconst DetailContents = ({ history }) => {\n\n    window.scrollTo(0,0);\n\n    const location = useLocation();\n\n    // contents에서 axios로 받아온 modelInfo data 중 color. (colorSelector의 props객체)\n    var color =  location.state.model.model.modelColor;\n    var colorKind = color.split(' ');\n\n    // contents에서 axios로 받아온 modelInfo data 중 size. (sizeSelector의 props객체)\n    var size = location.state.model.model.modelSize;\n    var sizeKind = size.split(' ');\n    var sizeSumm = location.state.model.model.modelSizeSummary;\n    var sizeSummKind = sizeSumm.split(' ');\n\n    const dressThumbnail = {\n        thumnailBlack : sample_3,\n        thumnailWhite : sample_2 \n    };\n\n    const dressColor = [\n        { color : '' },\n        { color : '' }\n    ];\n\n    const dressSize = [\n        { sizeSummary : '', size : '' },\n        { sizeSummary : '', size : '' },\n        { sizeSummary : '', size : '' },\n        { sizeSummary : '', size : '' },\n    ];\n    \n    // set selector color\n    for(var index in colorKind) {\n        dressColor[index].color = colorKind[index];\n    }\n\n    // set selector size\n    for(var index in sizeKind) {\n        dressSize[index].size = sizeKind[index];\n        dressSize[index].sizeSummary = sizeSummKind[index];\n    }\n\n    return (\n        <div>\n            <div class = 'detailContentsContainer' >\n                <div class = 'detailShot'>\n                    <img id = 'thumnail-size' src = {sample_1} />\n\n                    <div class = 'productExContainer'>\n                        <h1 class = 'productEx1'> ROMAN88 </h1>\n                        <h1 class = 'productEx2'>  2021 S/S COLECTION </h1>\n                        <h1 class = 'productEx3'> LOGO T SHIRTS </h1>\n\n                        <p class = 'productText'> 로망팔팔 첫 번째 컬렉션 로고 티셔츠입니다.</p>\n                        <p class = 'productText'> 릴렉스한 핏으로 제작되었으며 </p>\n                        <p class = 'productText'> 편안한 착용감과 이목을 끄는 프린팅의 디자인입니다.</p>\n                    </div>\n\n                    <img id = 'detail-size' src = {sample_2} />\n                    <img id = 'detail-size' src = {sample_3} />\n                    <img id = 'detail-size' src = {sample_4} />\n                    <img id = 'detail-size' src = {sample_5} />\n                    <img id = 'detail-size' src = {sample_6} />\n                    <img id = 'detail-size' src = {sample_7} />\n                    <img id = 'detail-size' src = {sample_8} />\n                    <img id = 'detail-size' src = {sample_9} />\n                    <img id = 'detail-size' src = {sample_10} />\n                    <img id = 'detail-size' src = {sample_11} />\n                    <img id = 'detail-size' src = {sample_12} />\n                    <img id = 'detail-size' src = {sample_13} />\n                    <img id = 'detail-size' src = {sample_14} />\n                </div>\n\n                <div class = 'select'>\n                    <Selector history = {history} dressThumbnail = {dressThumbnail} dressColor = {dressColor} dressSize = {dressSize} model = {location.state.model}/>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default DetailContents;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/NoticeStyle.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    \n  },\n}));\n\nconst Notice = () => {\n    \n    const [trigger, setTrigger] = useState('');\n    const [notice, setNotice] = useState([{\n        title : '',\n        contents : '',\n        registerDate : ''\n    }])\n\n    useEffect(async() => {\n\n        axios.post('/api/Manage/RetrieveNotice').then((response) => {\n\n            if(response.data.length > 0) {\n\n                setTrigger('items');\n                const _notice = response.data.map((notice) => ({\n                    title : notice.title,\n                    contents : notice.contents,\n                    registerDate : notice.registerDate\n                }));\n\n                setNotice(_notice);\n\n            } else {\n                setTrigger('none');\n            }\n\n        })\n    \n    }, []);\n\n\n\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <div class = 'NoticeContainer'>\n\n            <h4>Notice</h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <div class = 'Notice'>\n\n                <div className={classes.root}>\n\n                {notice.map((notice, index) => {\n\n                    var text = notice.contents.replace(/<br\\s*\\/?>/img, '\\r\\n');\n\n                    if(trigger == 'none') {\n                        return (\n                            <div>\n                                <h4 class = \"emptyNotice\"> 등록된 공지가 없습니다.</h4>\n                            </div>\n                        )\n                    } else if(trigger == 'items') {\n\n                        return (\n\n                            <Accordion expanded={expanded === 'panel' + index} onChange={handleChange('panel' + index)}>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1bh-content\"\n                                id=\"panel1bh-header\"\n                                >\n                                    <Typography className={classes.heading}>{notice.registerDate}</Typography>\n                                    <Typography className={classes.secondaryHeading}>{notice.title}</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails style = {{ backgroundColor : 'white', border : '1px solid black'}}>\n                                    <Typography style = {{ height : '350px'}}>\n                                        <pre>\n                                            <p>{text}</p>\n                                        </pre>\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                            \n                        );\n                    }\n\n                })}\n\n                \n                </div>\n\n                    \n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Notice;","import React from 'react';\nimport '../styles/AboutStyle.css';\n\nfunction About() {\n    return (\n        <div class = 'AboutContainer'>\n            \n            <div class = 'About'>\n                \n                <br /><br /><br /><br /><br />\n                <h4 style = {{ textAlign : 'center', fontSize : '70px', fontFamily : 'Manrope, sans-serif', fontWeight : 'bold'}}> UNBRIDLED ARDOR AND LIBERTY </h4> \n                <h4 style = {{marginTop : '-60px', textAlign : 'center', fontSize : '70px', fontFamily : 'Manrope, sans-serif', fontWeight : 'bold'}}>88TH VIEWPOINT </h4>\n                \n                <br /> <br /><br /><br /><br /><br /><br /><br /><br />\n                \n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default About;","import { useState, useCallback } from 'react'; \nexport default (initialValue = null) => { \n    const [value, setValue] = useState(initialValue); \n    const handler = useCallback(({target}) => { \n        setValue(target.value); \n    }, []); \n    \n    \n    return [value, handler, setValue]; \n};\n\n\n// useInput custom hook\n","import React, { useCallback } from 'react'; \nimport useInput from './useInput'; \nimport emailjs from 'emailjs-com'; \nimport { Form } from \"react-bootstrap\";\n\nimport '../styles/ContactStyle.css';\n\nconst Contact = ({ history }) => { \n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    } \n\n    const name = sessionStorage.getItem('name');\n    const email = sessionStorage.getItem('email');\n\n    const [title, onChangeTitle] = useInput(''); \n    const [text, onChangeText] = useInput(''); \n    const [phone, onChangePhone] = useInput('');\n    \n    const onSubmit = useCallback((e) => { \n\n        e.preventDefault(); \n        const inputNum = e.target.childElementCount - 1; \n        // [D] 버튼한개 제외 \n        const data = new FormData(e.target); \n        const entries = data.entries(); \n\n        let failNum = 0;\n        \n        for (let i = 0; i < inputNum; i++) { \n\n            const next = entries.next(); \n            const key = next.value[0]; \n            const value = next.value[1]; \n\n            if (!value) { \n                console.log(e.target);\n                failNum++; \n                alert(\"제목과 내용은 필수 입력사항입니다.\"); \n                break; \n            }\n        } \n\n        if (!failNum) { \n            emailjs.sendForm( 'roman88_store_mail', 'template_24awnyr', e.target, 'user_ArlPzAL9hx2Yt21Pffq8V' )\n            .then((result) => { \n                console.log('result.text', result.text); \n            }, (error) => { \n                console.log(error.text); \n            }); \n\n            alert(\"관리자에게 메일을 발송했습니다.\");\n            history.push(\"/\");\n        } \n\n    }, []); \n\n    \n    return ( \n        <div class = 'ContactContainer'>\n\n            <h4>Contact</h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <Form onSubmit={onSubmit}> \n\n                <div class = \"ContactTextContainer\">\n                    <h4 id = \"ContactTextInContainer\"> Name  </h4>\n                    <h4 id = \"ContactTextInContainer\"> Email  </h4>\n                    <h4 id = \"ContactTextInContainer\"> Phone  </h4>\n                    <h4 id = \"ContactTextInContainer\"> Title </h4>\n                    <h4 id = \"ContactTextInContainer\"> Content </h4>\n                </div>\n\n                <div class = \"ContactInputContainer\">\n                    <input class = 'nameArea' type=\"text\" name=\"name\" value={name} readOnly = \"true\" /> \n                    <br/> \n                    <input class = 'emailArea' type=\"text\" name=\"email\" value={email} readOnly = \"true\" /> \n                    <br/>\n                    <input class = 'phoneArea' type=\"text\" name=\"phoneNumber\" placeholder = \"전화번호 미표기를 원하는 경우 - 입력\" value = {phone} onChange = {onChangePhone}/>\n                    <br/>\n                    <input class = 'titleArea' type=\"text\" name=\"title\" placeholder=\"Subject\" value = {title} onChange = {onChangeTitle} />\n                    <br/>\n                </div>\n\n                <div class = \"MessageContainer\">\n                    <textarea class = 'contentArea' name=\"text\" placeholder=\"Message\" value={text} onChange={onChangeText} /> \n                </div>\n\n                <button class = \"sendButton\" type=\"submit\"> Send </button> \n\n            </Form> \n        </div>\n    ); \n}; \nexport default Contact;","import React from 'react';\n\nimport '../styles/BuyNowStyle.css';\nimport TOS from './TOS';\n\nconst BuyNow = ({ location, history }) => {\n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    }\n\n    window.scrollTo(0,0);\n\n    const modelNo = location.state.orderInfo.orderModelNo;\n    const modelName = location.state.orderInfo.orderModelName;\n    const color = location.state.orderInfo.orderColor;\n    const psc = location.state.orderInfo.orderPsc;\n    const size = location.state.orderInfo.orderSize;\n    let price = location.state.orderInfo.orderPrice;\n    const modelPrice = location.state.orderInfo.orderModelPrice;\n    const thumnailShot = location.state.orderInfo.thumnailShot;\n\n    let delivery = '';\n\n    if(price < 50000) {\n        delivery = '3,000원';\n        price += 3000;\n    } else {\n        delivery = '0원';\n    }\n\n    return (\n        <div class = 'BuyContainer'>\n\n            <div>\n                <h3> PURCHASE </h3>\n                <hr style = {{ width : '100%'}} />\n            </div>\n\n            <table class = 'buyTable'>\n                {/* <th> </th> */}\n                <th id = 'productInfo'> 상품정보 </th>\n                <th id = 'productPrice'> 상품금액 </th>\n                <th id = 'productPcs'> 수량 </th>\n                <th id = 'productDelivery'> 배송 </th>\n                <th id = 'payment'> 결제금액 </th>\n                <tr>\n                    {/* <td>\n                        <label class = 'checker' for=\"check\">\n                            <input type=\"checkbox\" id=\"check\" class = 'checkInput'/>\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </td> */}\n                    <td>\n                        <img src = {thumnailShot} id = 'buyThumbnail'/>\n                        <p id = 'thumbnailText' >{modelName}</p> \n                        <p id = 'thumbnailText' >Model No. {modelNo}</p>\n                        <p id = 'thumbnailText' >color : {color} / size : {size}</p>                        \n                    </td>\n                    <td>\n                        <p id = 'tableText'>{modelPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</p> \n                    </td>\n                    <td>\n                        <p id = 'tableText'>{psc}</p>\n                    </td>\n                    <td>\n                        <p id = 'tableText'> 택배 {delivery} </p>\n                        <p id = 'tableDeliveryText'> (50,000원 이상 무료배송) </p>\n                    </td>\n                    <td>\n                        <p id = 'tableText'> {price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} </p>\n                    </td>\n                </tr>\n                \n            </table>\n            <hr style = {{ width : '100%'}} />\n\n            <div>\n                <div class = 'paymentContainer'>\n                    <h3 id = 'naverPayBtn'> N pay</h3>\n                </div>\n                <h3 id = 'paymentPrice'> {price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} 원 </h3>\n                <h3 id = 'paymentPrice'> Total &nbsp;</h3>\n            </div>\n\n            <TOS />\n\n        </div>\n    );\n}\n\nexport default BuyNow;\n\n","export default __webpack_public_path__ + \"static/media/kakaotalk.9454491b.svg\";","export default __webpack_public_path__ + \"static/media/instagram.a814ac99.svg\";","import React from 'react';\nimport '../styles/FooterStyle.css';\nimport '../styles/IconStyle.css';\n\nimport Icon_kakao from '../Icons/kakaotalk.svg';\nimport Icon_insta from '../Icons/instagram.svg';\n\nfunction Footer() {\n    return (\n        <div class = 'footer'>\n\n            <div class = 'footerForLogo'>\n               <h2 id = 'footerForLogo-text'> ROMAN88</h2> \n            </div>\n\n            <div class = 'footer-left'>\n                <h5> 대표자 : 정재환 </h5>\n                <h5 > 사업자등록번호 : 413-19-01231 </h5>\n                <h5 > 통신판매업 신고번호 : 2021 충남천안 1019 </h5>\n            </div>\n            \n            <div class = 'footer-right'>\n                <a href = 'http://pf.kakao.com/_seZMs' target = 'blank' > <img src = {Icon_kakao} id = 'Icon-size' style = {{ marginLeft : '80px'}} onClick/> </a>\n                <a href = 'https://www.instagram.com/romanpalpal/' target = 'blank' > <img src = {Icon_insta} id = 'Icon-size' style = {{}} /> </a>\n                <h5> Email : high0064@gmail.com </h5>\n                <h5> COPYRIGHT © ROMAN88 </h5>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Footer;\n\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nimport '../styles/MembersManageStyle.css';\n\nconst MembersManage = () => {\n\n    const [membersAccount, setMembersAccount] = useState([{\n        name : '',\n        id : '',\n        address : '',\n        postCode : '',\n        phoneNumber : '',\n        email : ''\n    }]);\n\n    useEffect(async() => {\n\n        axios.post('/api/Manage/MembersAccount').then((response) => {\n\n            console.log(response.data);\n\n            const _memberAccount = response.data.map((account) => ({\n                name : account.name,\n                id : account.id,\n                address : account.address,\n                postCode : account.postCode,\n                phoneNumber : account.phoneNumber,\n                email : account.email\n            }));\n\n            setMembersAccount(_memberAccount);\n\n        });\n\n    },[]);\n\n    return (\n        <div class = 'membersManageContainer'>\n            <h4> Members </h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <table class = 'membersTable'>\n                <th id = 'nameRow'> 이름 </th>\n                <th id = 'idRow'> 아이디 </th>\n                <th id = 'addressRow'> 주소 </th>\n                <th id = 'postCodeRow'> 우편번호 </th>\n                <th id = 'phoneNumberRow'> 전화번호 </th>\n                <th id = 'emailRow'> 이메일 </th>\n\n                {\n                    membersAccount.map((account, index) => {\n\n                        return (\n                            <tr class = \"accountRow\">\n\n                                <td key = {index+1}>\n                                    <h5> {account.name} </h5>\n                                </td>\n                                <td key = {index+2}>\n                                    <h5> {account.id} </h5>\n                                </td>\n                                <td key = {index+3}>\n                                    <h5> {account.address} </h5>\n                                </td>\n                                <td key = {index+4}>\n                                    <h5> {account.postCode} </h5>\n                                </td>\n                                <td key = {index+5}>\n                                    <h5> {account.phoneNumber} </h5>\n                                </td>\n                                <td key = {index+6}>\n                                    <h5> {account.email} </h5>\n                                </td>\n                                \n                            </tr>\n                        );\n\n                    })\n                }\n\n            </table>\n        </div>\n    );\n\n}\n\nexport default MembersManage;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { qs } from 'url-parse';\n\nimport '../styles/NoticeManageStyle.css';\n\nconst NoticeManage = () => {\n\n    const [noticeInfo, setNoticeInfo] = useState({\n        title : '',\n        contents : ''\n    });\n\n    const [trigger, setTrigger] = useState('');\n    const [notice, setNotice] = useState([{\n        title : '',\n        registerDate : '',\n        writer : '',\n        seq : 0\n    }])\n\n    const writer = sessionStorage.getItem('id');\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n\n        setNoticeInfo({\n            ...noticeInfo,\n            [name]:value\n        });\n    }\n\n    useEffect(async() => {\n\n        axios.post('/api/Manage/RetrieveNotice').then((response) => {\n\n            if(response.data.length > 0) {\n\n                setTrigger('items');\n                const _notice = response.data.map((notice) => ({\n                    title : notice.title,\n                    registerDate : notice.registerDate,\n                    writer : notice.writer,\n                    seq : notice.seq\n                }));\n\n                setNotice(_notice);\n\n            } else {\n                setTrigger('none');\n            }\n\n        })\n    \n    }, []);\n\n    const addNotice = () => {\n\n        const {title, contents} = noticeInfo;\n        var text = contents.replace(/(?:\\r\\n|\\r|\\n)/g,'<br/>');\n\n        axios.post('/api/Manage/AddNotice', null, { params : {\n            title,\n            text,\n            writer\n        }}).then((response) => {\n            if(response.data == \"addNotice\") {\n                alert(\"공지사항 등록함.\");\n                document.location.href = \"/Profile\";\n            } else if(response.data == \"failed\") {\n                alert(\"ㄴㄴ 공지등록 안됨\");\n            }   \n        })\n    }\n\n    const removeNotice = () => {\n\n        const selected = [];\n\n        for(var i = 0; i < document.getElementsByClassName('checkInput').length; i++){\n\n            if(document.getElementById('checking' + notice[i].seq).checked){\n                selected.push(notice[i].seq);\n            }\n\n        }\n        if(window.confirm(\"선택한 공지사항을 Notice에서 삭제합니다.\")) {\n\n            axios.post('/api/Manage/RemoveNotice', null, { params : {\n                selected : selected,\n                writer\n            },\n            paramsSerializer : params => {\n                return qs.stringify(params);\n            }\n        \n            }).then((response) => {\n                if(response.data == \"removed\") {\n                    alert(\"삭제되었습니다.\");\n                    document.location.href = \"/noticeManage\";\n                } else if(response.data == \"failed\") {\n                    alert(\"selected data not found in table\");\n                }   \n            })\n\n        } else {\n            \n        }\n    }\n\n    return (\n        <div class = \"noticeManageContainer\">\n            <h4>Add Notice</h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <div class = \"titleContainer\">\n                <h4 style = {{ float : 'left'}}> Title </h4>\n                <input name = 'title' type = 'text' class = \"titleInput\" onChange = {onChange}/>\n                <button class = \"noticeAddButton\" onClick = {addNotice}> Enroll Notice</button>\n            </div>\n\n            <div class = \"contentsContainer\">\n                <h4 style = {{ float : \"left\"}} > Contents </h4>\n                <textarea name = 'contents' type = 'text' class = 'contentsInput' cols=\"20\" wrap=\"hard\" onChange = {onChange}/>\n            </div>\n\n            <div>\n                <h4> Registered Notice</h4>\n                <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n                <table>\n\n                {\n                    notice.map((notice, index) => {\n\n                        if(trigger =='none') {\n                            return (\n                                <h4> 등록한 공지가 없습니다.</h4>\n                            )\n                        } else if(trigger == 'items') {\n                            return (\n                                <tr>\n                                    <td key = {index} class = 'dateText'>\n                                        <h5 style = {{ float : 'left'}}> {notice.registerDate} </h5>\n                                    </td>\n                                    <td key = {index} class = 'titleText'>\n                                        <h5 style = {{ float : 'left'}}> {notice.title}</h5>\n                                    </td>\n                                    <td key = {index} class = 'writerText'>\n                                        <h5 style = {{ float : 'left'}}> {notice.writer}</h5>\n                                    </td>\n                                    <td>\n                                        <label class = 'checker' for = {\"checking\" + notice.seq} >\n                                            <input type=\"checkbox\" id = {\"checking\" + notice.seq} class = 'checkInput' />\n                                            <span class=\"checkmark\"></span>\n                                        </label>\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    })\n                }\n                </table>\n\n                <div>\n                    <button class = \"removeButton\" onClick = {removeNotice}> Remove Notice </button>\n                </div>\n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default NoticeManage;","import React, {useState, useEffect} from 'react';\n\nimport '../styles/QnAStyle.css';\n\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { Fragment } from 'react-is';\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n      width: '100%',\n    },\n\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexShrink: 0,\n    },\n\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n\n}));\n\nconst QnA = ({ history }) => {\n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    }\n\n    const [trigger, setTrigger] = useState('');\n    const [qnaList, setQnaList] = useState([{\n        seq : 0,\n        id : '',\n        name : '',\n        title : '',\n        contents : '',\n        answer : '',\n        pass : '',\n        registerDate : ''\n    }])\n\n    useEffect(async() => {\n\n        axios.post('/api/Manage/RetrieveQnA').then((response) => {\n\n            if(response.data.length > 0) {\n\n                setTrigger('items');\n                const _qna = response.data.map((qna) => ({\n                    seq : qna.seq,\n                    id : qna.id,\n                    name : qna.name,\n                    title : qna.title,\n                    contents : qna.contents,\n                    answer : qna.answer,\n                    pass : qna.pass,\n                    registerDate : qna.registerDate,\n                }));\n\n                setQnaList(_qna);\n\n            } else {\n                setTrigger('none');\n            }\n\n        })\n    \n    }, []);\n\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel, id) => (event, isExpanded) => {\n\n        // 여기에 modal popup 만들어서 pass 입력. 분기문 써서 success되면 setExpanded open\n        var signedId = sessionStorage.getItem(\"id\");\n        var auth = sessionStorage.getItem(\"auth\");\n        if(signedId == id || auth == \"manager\") {\n            setExpanded(isExpanded ? panel : false);\n        } else {\n            alert(\"질문자 본인만 열람할 수 있습니다.\");\n        }\n        \n    \n    };\n\n    var questionsSeq = [];\n    var questioner = [];\n\n    var modifySeq = [];\n    var questionerHasAnswer = [];\n\n\n    const addQuestion = () => {\n        history.push('/addQuestion');\n    }\n\n\n\n    const addAnswer = () => {\n\n        var answerTrigger = 'none';\n        \n        for(var qSeq in questionsSeq) {\n\n            var answerInput = document.getElementById('answer' + questionsSeq[qSeq]).value;\n\n            if(answerInput != '') {\n\n                answerTrigger = 'ans';\n\n                var seq = questionsSeq[qSeq];\n                var id = questioner[qSeq];\n\n                axios.post('/api/Manage/AddAnswer', null, { params : {\n                    seq,\n                    answerInput,\n                    id\n                }}).then((response) => {\n                    if(response.data == 'success') {\n                        alert(\"답변을 등록했습니다.\");\n                        document.location.href = \"/qna\";\n                    }\n                })\n        \n            }    \n        }\n\n        if(answerTrigger == 'none') {\n            alert(\"답변해라 재환아\");\n        }\n    }\n\n    const modifyAnswer = () => {\n\n        for(var modifySelect in modifySeq){\n\n            if(document.getElementById('checking' + modifySeq[modifySelect]).checked){\n\n                var modifyInput = document.getElementById('answered' + modifySeq[modifySelect]).value;\n                var seq = modifySeq[modifySelect];\n                var id = questionerHasAnswer[modifySelect];\n\n                axios.post('/api/Manage/ModifyAnswer', null, { params : {\n                    seq,\n                    modifyInput,\n                    id\n                }}).then((response) => {\n                    if(response.data == 'success') {\n                        alert(\"답변을 수정했습니다.\");\n                        document.location.href = \"/qna\";\n                    }\n                })\n\n            }\n\n        }\n    }\n\n    var auth = sessionStorage.getItem('auth');\n\n    const ForManagers = ({askSeq, askId}) => {\n\n        questionsSeq.push(askSeq);\n        questioner.push(askId);\n\n        if(auth == \"manager\") {\n\n            return (\n                <div className = 'answerContainer'>\n                    <textarea class = \"managersAnswer\" id = {'answer' + askSeq}/>\n                    <button class = 'answerButton' onClick = {addAnswer}> Reply </button>\n                </div>\n            )\n\n        } else {\n\n            return (\n                <Fragment>\n\n                </Fragment>\n            );\n\n        }\n\n    }\n\n    const ForManagersHasAnswer = ({ask, askSeq, askId}) => {\n\n        modifySeq.push(askSeq);\n        questionerHasAnswer.push(askId);\n\n        if(auth == \"manager\") {\n\n            return (\n                <div className = 'answerContainer'>\n                    <h5 style = {{ marginLeft : \"20px\"}}> Answer : </h5>\n                    <textarea class = 'managersAnswer' id = {'answered' + askSeq}>\n                        {ask}\n                    </textarea>\n\n                    <button class = 'answerButton'  style = {{ float : 'right'}} onClick = {modifyAnswer}> Modify </button>\n\n                    <label class = 'checker' for = {\"checking\" + askSeq} style = {{ float : 'right', marginRight : '5px'}} >\n                        <input type=\"checkbox\" id = {\"checking\" + askSeq} class = 'checkInput' />\n                        <span class=\"checkmark\" ></span>\n                    </label>\n\n                    \n                </div>\n            )\n\n        } else {\n\n            return (\n                <div className = 'answerContainer'>\n                    <h5 style = {{ marginLeft : \"15px\"}}> Answer : </h5>\n                    <pre class = 'answer'>\n                        <p>{ask}</p>\n                    </pre>\n                </div>\n            )\n        }\n    }\n\n    return (\n\n        <div>\n            <div class = 'QnATop' style = {{ borderBottom : '2px solid black'}}>\n                    <h4 style = {{ float : 'left', }}>QnA</h4> \n\n                    <h4 class = \"addQuestion\" onClick = {addQuestion}> + Q </h4>\n            </div>\n\n            <div class = 'QnAContainer'>\n\n                {\n                    qnaList.map((qna, index) => {\n\n                        var text = qna.contents.replace(/<br\\s*\\/?>/img, '\\r\\n');\n\n                        if(qna.answer == null) {\n\n                            return(\n\n                                <Accordion expanded={expanded === 'panel' + index} onChange={handleChange('panel' + index, qna.id)}>\n\n                                    <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    style = {{ borderLeft : \"0.5rem solid orange\"}}\n                                    >\n                                        <Typography className={classes.heading} style = {{ width : '100px'}}>{qna.registerDate}</Typography>\n                                        <Typography className={classes.heading} style = {{ width : '300px'}}>{qna.name} [{qna.id}]</Typography>\n                                        <Typography className={classes.secondaryHeading} style = {{ width : '400px'}}>{qna.title}</Typography>\n\n                                    </AccordionSummary>\n                                    \n                                    <AccordionDetails style = {{ backgroundColor : 'white', border : '1px solid black'}}>\n\n                                        <Typography style = {{ height : '350px'}}>\n                                            <pre>\n                                                <p>{text}</p>\n                                            </pre>\n                                        </Typography>\n                                        \n                                    </AccordionDetails>\n                                    \n                                    <ForManagers askSeq = {qna.seq} askId = {qna.id}/>\n\n                                </Accordion>\n                            );\n\n                        } else if(qna.answer != '') {\n\n                            return(\n\n                                <Accordion expanded={expanded === 'panel' + index} id = {'panel' + index} seq = {qna.seq} onChange={handleChange('panel' + index, qna.id)}>\n                                    <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    style = {{ borderLeft : \"0.5rem solid black\"}}\n                                    >\n                                        <Typography className={classes.heading} style = {{ width : '100px'}}>{qna.registerDate}</Typography>\n                                        <Typography className={classes.heading} style = {{ width : '300px'}}>{qna.name} [{qna.id}]</Typography>\n                                        <Typography className={classes.secondaryHeading} style = {{ width : '600px'}}>{qna.title}</Typography>\n                                    </AccordionSummary>\n                                    \n                                    <AccordionDetails style = {{ backgroundColor : 'white', border : '1px solid black'}}>\n                                        <Typography style = {{ height : '350px'}}>\n                                            <pre>\n                                                <p>{text}</p>\n                                            </pre>\n                                        </Typography>\n                                        \n                                    </AccordionDetails>\n                                    \n                                    <ForManagersHasAnswer askSeq = {qna.seq} ask = {qna.answer} askId = {qna.id}/>\n                                    \n                                </Accordion>\n                            );\n                        }\n                    })\n                }\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default QnA;","import React, { useState } from 'react';\n\nimport axios from 'axios';\nimport { Fragment } from 'react-is';\n\nimport '../styles/AddQuestionStyle.css';\n\nconst AddQuestion = () => {\n\n    const [question, setQuestion] = useState({\n        questionTitle : '',\n        questionContent : ''\n    });\n\n    const onChange = (e) => {\n\n        const { value, name } = e.target;\n\n        setQuestion({\n            ...question,\n            [name]:value\n        });\n\n        console.log(question.questionTitle);\n    }\n\n    const EnrollQuestion = () => {\n\n        const {questionTitle, questionContent} = question;\n        const id = sessionStorage.getItem('id');\n        const name = sessionStorage.getItem('name');\n\n        if(questionTitle == '' || questionContent == '') {\n            alert('제목과 내용은 필수 입력사항 입니다.')\n        } else {\n            axios.post('/api/Manage/AddQuestion', null, { params : {\n                questionTitle,\n                questionContent,\n                id,\n                name\n            }}).then((response) => {\n                if(response.data == \"success\") {\n                    alert(\"QnA에 질문이 등록되었습니다.\");\n                    document.location.href = \"/qna\";\n                } else if(response.data == \"failed\") {\n                    alert(\"ㄴㄴ  안됨\");\n                }   \n            })\n        }\n    }\n\n    return (\n\n        <div class = 'questionContainer'>\n            <h4>AddQuestion</h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <div class = \"titleContainer\">\n                <h4 style = {{ float : 'left'}}> Title </h4>\n                <input name = 'questionTitle' type = 'text' class = \"titleInput\" onChange = {onChange} />\n                <button class = \"noticeAddButton\" onClick = {EnrollQuestion}> OK</button>\n            </div>\n\n            <div class = \"contentsContainer\">\n                <h4 style = {{ float : \"left\"}} > Contents </h4>\n                <textarea name = 'questionContent' type = 'text' class = 'contentsInput' cols=\"20\" wrap=\"hard\" onChange = {onChange}/>\n            </div>\n        </div>\n\n    );\n}\n\nexport default AddQuestion;","import React, { useCallback } from 'react'; \nimport useInput from '../HamburgerMenu/useInput'; \nimport { Form } from \"react-bootstrap\";\n\nimport '../styles/ContactEmailStyle.css';\nimport axios from 'axios';\n\nvar sendTitle = '';\nvar sendContent = '';\n\nconst ContactEmail = ({ history }) => { \n\n    if(sessionStorage.getItem(\"sessionInfo\") == null) {\n        history.push(\"/signInPage\");\n    } else if (sessionStorage.getItem(\"auth\") != 'manager') {\n        alert(\"잘못된 접근입니다\");\n        history.push(\"/\");\n    }\n\n    const name = sessionStorage.getItem('name');\n    const email = sessionStorage.getItem('email');\n\n    const [title, onChangeTitle] = useInput(''); \n    const [text, onChangeText] = useInput(''); \n\n    sendTitle = title;\n    sendContent = text;\n\n    const onSubmit = useCallback((e) => { \n\n        e.preventDefault(); \n        const inputNum = e.target.childElementCount - 1; \n        // [D] 버튼한개 제외 \n        const data = new FormData(e.target); \n        const entries = data.entries(); \n\n        let failNum = 0; \n        \n        for (let i = 0; i < inputNum; i++) { \n\n            const next = entries.next(); \n            const key = next.value[0]; \n            const value = next.value[1]; \n\n            if (!value) { \n                failNum++; \n                alert(\"제목과 내용은 필수 입력사항입니다.\"); \n                break; \n            }\n        } \n\n        if (!failNum) { \n            // emailjs.sendForm( 'roman88_store_mail', 'template_24awnyr', e.target, 'user_ArlPzAL9hx2Yt21Pffq8V' )\n            // .then((result) => { \n            //     console.log('result.text', result.text); \n            // }, (error) => { \n            //     console.log(error.text); \n            // }); \n\n            // alert(\"관리자에게 메일을 발송했습니다.\");\n            // history.push(\"/\");\n\n            axios.post('/api/Manage/SendMailAllUser', null, { params : {\n                sendTitle,\n                sendContent,\n                name\n            }}).then((response) => {\n                if(response.data == 'success') {\n                    alert(\"회원들에게 메일을 발송했습니다.\");\n                    document.location.href = \"/profile\";\n                }\n            })\n        } \n    }, []); \n    \n    return ( \n        <div class = 'ContactEmailContainer'>\n\n            <h4>Send Mail All User</h4>\n            <hr style = {{ border : '0.5px solid black', marginTop : '-15px', width : '100%' }}/>\n\n            <Form onSubmit={onSubmit}> \n\n                <div class = \"TextContainer\">\n                    <h4 id = \"TextInContainer\"> Name  </h4>\n                    <h4 id = \"TextInContainer\"> Email  </h4>\n                    <h4 id = \"TextInContainer\"> Title </h4>\n                    <h4 id = \"TextInContainer\"> Content </h4>\n                </div>\n\n                <div class = \"InputContainer\">\n                    <input class = 'nameArea' type=\"text\" name=\"name\" value={name} readOnly = \"true\" /> \n                    <br/> \n                    <input class = 'emailArea' type=\"text\" name=\"email\" value={email} readOnly = \"true\" /> \n                    <br/>\n                    <input class = 'titleArea' type=\"text\" name=\"title\" placeholder=\"Subject\" value = {title} onChange = {onChangeTitle} />\n                    <br/>\n                </div>\n\n                <div class = \"MessageContainer\">\n                    <textarea class = 'contentArea' name=\"text\" placeholder=\"Message\" value={text} onChange={onChangeText} /> \n                </div>\n\n                <button class = \"sendButton\" type=\"submit\"> Send </button> \n\n            </Form> \n        </div>\n    ); \n}; \n\nexport default ContactEmail;\n\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport MainTop from './components/MainTop';\nimport Contents from './components/Contents';\nimport Main from './components/Main';\nimport SignUpPage from './components/SignUpPage';\nimport SignInPage from './components/SignInPage';\n\nimport MyCart from './components/MyCart';\nimport Profile from './components/Profile';\nimport DetailContents from './components/DetailContents';\n\nimport Notice from './HamburgerMenu/Notice';\nimport About from './HamburgerMenu/About';\nimport Contact from './HamburgerMenu/Contact';\n\nimport BuyNow from './components/BuyNow';\n\nimport Footer from './components/Footer';\n\nimport MembersManage from './managers/MembersManage';\n\nimport './styles/FooterStyle.css';\nimport NoticeManage from './managers/NoticeManage';\nimport QnA from './HamburgerMenu/QnA';\nimport AddQuestion from './HamburgerMenu/AddQuestion';\nimport ContactEmail from './email/ContactEmail';\n\nconst Router = () => {\n\n    return (\n        <BrowserRouter>\n        <MainTop />\n            <Switch>\n                <Route path = '/' exact component = {Main} />\n                <Route path = '/detail/' component = {DetailContents} />\n                <Route path = '/contents' component = {Contents} />\n\n                <Route path = '/signUpPage' component = {SignUpPage} />\n                <Route path = '/signInPage' component = {SignInPage} />\n\n                <Route path = '/notice' component = {Notice} />\n                <Route path = '/about' component = {About} />\n                <Route path = '/contact' component = {Contact} />\n                <Route path = '/qna' component = {QnA} />\n                <Route path = '/addQuestion' component = {AddQuestion} />\n\n                <Route path = '/profile' component = {Profile} />\n\n                <Route path = '/MyCart' component = {MyCart} />\n                <Route path = '/buy' component = {BuyNow} />\n\n                <Route path = '/membersManage' component = {MembersManage} />\n                <Route path = '/noticeManage' component = {NoticeManage} />\n                <Route path = '/emailSend' component = {ContactEmail} />\n            </Switch>\n\n        <div class = 'Footer-container'>\n            <Footer />  \n        </div>\n\n        </BrowserRouter>\n    )\n}\n\nexport default Router;","export default __webpack_public_path__ + \"static/media/watermark.374bdb09.svg\";","import React from 'react';\nimport '../styles/WaterMarkStyle.css';\nimport watermark1 from '../sampleIcons/watermark.svg';\n\nconst Watermark = ({ history }) => {\n    const backToTop = () => {\n        // Scroll | button show/hide\n        window.addEventListener('scroll', () => {\n          if (document.querySelector('html').scrollTop > 100) {\n            document.getElementById('Icon-watermark').style.display = \"block\";\n          }\n        });\n        // back to top\n        document.getElementById('Icon-watermark').addEventListener('click', () => {\n          window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n          });\n        })\n    };\n    \n\n    return (\n        <div class = 'container-watermark' onClick = {backToTop} >\n            <img id = 'Icon-watermark' src = {watermark1} />\n        </div>\n    );\n}\n\n\n\nexport default Watermark;","import React, {Component} from 'react';\nimport Router from './Routes';\nimport Watermark from './components/Watermark';\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Watermark />\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}